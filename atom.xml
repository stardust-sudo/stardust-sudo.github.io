<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>stardust&#39;s blog</title>
  
  
  <link href="https://stardust-sudo.github.io/atom.xml" rel="self"/>
  
  <link href="https://stardust-sudo.github.io/"/>
  <updated>2022-05-04T02:09:16.361Z</updated>
  <id>https://stardust-sudo.github.io/</id>
  
  <author>
    <name>stardust</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL8新特性窗口函数MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/05/04/cb5279dca9ea/"/>
    <id>https://stardust-sudo.github.io/2022/05/04/cb5279dca9ea/</id>
    <published>2022-05-04T02:09:15.000Z</published>
    <updated>2022-05-04T02:09:16.361Z</updated>
    
    <content type="html"><![CDATA[<h1 id="窗口函数"><a href="#窗口函数" class="headerlink" title="窗口函数"></a>窗口函数</h1><h2 id="序号函数"><a href="#序号函数" class="headerlink" title="序号函数"></a>序号函数</h2><ul><li>ROW_NUMBER()函数</li></ul><p>ROW_NUMBER()函数能够对数据中的序号进行顺序显示</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查询goods数据表中每个商品分类下价格降序排列的各个商品信息</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> category_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> price <span class="keyword">DESC</span>) <span class="keyword">as</span> row_num,</span><br><span class="line">goods.<span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> goods;</span><br></pre></td></tr></table></figure><ul><li>RANK()函数</li></ul><p>RANK()函数对数据排序，跳过重复序号，比如1、1、3</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查询goods数据表中每个商品分类下价格降序排列的各个商品信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> category_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> price <span class="keyword">DESC</span>) <span class="keyword">AS</span> row_num,</span><br><span class="line">goods.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> goods;</span><br></pre></td></tr></table></figure><ul><li>DENSE_RANK()函数</li></ul><p>DENSE_RANK()函数对数据排序，不跳过重复序号，比如1、1、2</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查询goods数据表中每个商品分类下价格降序排列的各个商品信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">DENSE_RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> category_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> price <span class="keyword">DESC</span>) <span class="keyword">AS</span> row_num,</span><br><span class="line">goods.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> goods;</span><br></pre></td></tr></table></figure><h1 id="分布函数"><a href="#分布函数" class="headerlink" title="分布函数"></a>分布函数</h1><ul><li>PERCENT_RANK()函数</li></ul><p>PERCENT_RANK&#x3D;(rank-1)&#x2F;(rows-1)，rank是RANK()函数产生的序号，rows是当前窗口的总记录数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#查询goods数据表中category_id<span class="operator">=</span><span class="number">1</span>情况下商品的PERCENT_RANK值</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">RANK</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> r,</span><br><span class="line"><span class="built_in">PERCENT_RANK</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> pr,</span><br><span class="line">goods.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> goods</span><br><span class="line"><span class="keyword">WHERE</span> category_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">WINDOW</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> category_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> price);</span><br></pre></td></tr></table></figure><ul><li>CUME_DIST()函数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查询goods数据表中小于或等于当前价格的比例</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CUME_DIST</span>() <span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> category_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> price <span class="keyword">ASC</span>) <span class="keyword">AS</span> cd,</span><br><span class="line">id, category, NAME, price</span><br><span class="line"><span class="keyword">FROM</span> goods;</span><br></pre></td></tr></table></figure><h1 id="前后函数"><a href="#前后函数" class="headerlink" title="前后函数"></a>前后函数</h1><ul><li>LAG(expr,n)函数</li></ul><p>LAG(expr,n)函数返回当前行的前n行的expr的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#查询goods数据表中前一个商品价格与当前商品价格的差值</span><br><span class="line"><span class="keyword">SELECT</span> id, category, NAME, price, pre_price, price <span class="operator">-</span> pre_price <span class="keyword">AS</span> diff_price</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> id, category, NAME, price,<span class="built_in">LAG</span>(price,<span class="number">1</span>) <span class="keyword">OVER</span> w <span class="keyword">AS</span> pre_price</span><br><span class="line"><span class="keyword">FROM</span> goods</span><br><span class="line"><span class="keyword">WINDOW</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> category_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> price)) t;</span><br></pre></td></tr></table></figure><ul><li>LEAD(expr,n)函数</li></ul><p>LEAD(expr,n)函数返回当前行的后n行的expr的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#<span class="built_in">LEAD</span>(expr,n)函数返回当前行的后n行的expr的值</span><br><span class="line"><span class="keyword">SELECT</span> id, category, NAME, behind_price, price,behind_price <span class="operator">-</span> price <span class="keyword">AS</span></span><br><span class="line">diff_price</span><br><span class="line"><span class="keyword">FROM</span>(</span><br><span class="line"><span class="keyword">SELECT</span> id, category, NAME, price,<span class="built_in">LEAD</span>(price, <span class="number">1</span>) <span class="keyword">OVER</span> w <span class="keyword">AS</span> behind_price</span><br><span class="line"><span class="keyword">FROM</span> goods <span class="keyword">WINDOW</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> category_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> price)) t;</span><br></pre></td></tr></table></figure><h1 id="首尾函数"><a href="#首尾函数" class="headerlink" title="首尾函数"></a>首尾函数</h1><ul><li>FIRST_VALUE(expr)函数</li></ul><p>FIRST_VALUE(expr)函数返回第一个expr的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#按照价格排序，查询第<span class="number">1</span>个商品的价格信息</span><br><span class="line"><span class="keyword">SELECT</span> id, category, NAME, price, stock,<span class="built_in">FIRST_VALUE</span>(price) <span class="keyword">OVER</span> w <span class="keyword">AS</span></span><br><span class="line">first_price</span><br><span class="line"><span class="keyword">FROM</span> goods <span class="keyword">WINDOW</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> category_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> price);</span><br></pre></td></tr></table></figure><ul><li>LAST_VALUE(expr)函数</li></ul><p>LAST_VALUE(expr)函数返回最后一个expr的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#按照价格排序，查询最后一个商品的价格信息</span><br><span class="line"><span class="keyword">SELECT</span> id, category, NAME, price, stock,<span class="built_in">LAST_VALUE</span>(price) <span class="keyword">OVER</span> w <span class="keyword">AS</span> last_price</span><br><span class="line"><span class="keyword">FROM</span> goods <span class="keyword">WINDOW</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> category_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> price);</span><br></pre></td></tr></table></figure><h1 id="其他函数"><a href="#其他函数" class="headerlink" title="其他函数"></a>其他函数</h1><ul><li>NTH_VALUE(expr,n)函数</li></ul><p>NTH_VALUE(expr,n)函数返回第n个expr的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查询goods数据表中排名第<span class="number">2</span>和第<span class="number">3</span>的价格信息</span><br><span class="line"><span class="keyword">SELECT</span> id, category, NAME, price,<span class="built_in">NTH_VALUE</span>(price,<span class="number">2</span>) <span class="keyword">OVER</span> w <span class="keyword">AS</span> second_price,</span><br><span class="line"><span class="built_in">NTH_VALUE</span>(price,<span class="number">3</span>) <span class="keyword">OVER</span> w <span class="keyword">AS</span> third_price</span><br><span class="line"><span class="keyword">FROM</span> goods <span class="keyword">WINDOW</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> category_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> price);</span><br></pre></td></tr></table></figure><ul><li>NTILE(n)函数</li></ul><p>NTILE(n)函数将分区中的有序数据分为n个桶，记录桶编号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#将goods表中的商品按照价格分为<span class="number">3</span>组</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">NTILE</span>(<span class="number">3</span>) <span class="keyword">OVER</span> w <span class="keyword">AS</span> nt,id, category, NAME, price</span><br><span class="line"><span class="keyword">FROM</span> goods <span class="keyword">WINDOW</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> category_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> price);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;窗口函数&quot;&gt;&lt;a href=&quot;#窗口函数&quot; class=&quot;headerlink&quot; title=&quot;窗口函数&quot;&gt;&lt;/a&gt;窗口函数&lt;/h1&gt;&lt;h2 id=&quot;序号函数&quot;&gt;&lt;a href=&quot;#序号函数&quot; class=&quot;headerlink&quot; title=&quot;序号函数&quot;&gt;&lt;/a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>触发器MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/05/03/55fbeeeb9eb3/"/>
    <id>https://stardust-sudo.github.io/2022/05/03/55fbeeeb9eb3/</id>
    <published>2022-05-03T15:13:56.000Z</published>
    <updated>2022-05-03T15:13:26.527Z</updated>
    
    <content type="html"><![CDATA[<h1 id="触发器概述"><a href="#触发器概述" class="headerlink" title="触发器概述"></a>触发器概述</h1><p>使用场景：有商品信息和库存信息两张表，添加一条商品记录的时候，也要添加一条库存记录，可以使用一个触发器，商品数据插入触发库存数据插入</p><p>当数据库执行INSERT&#x2F;UPDATE&#x2F;DELETE时，自动触发相应操作</p><h1 id="触发器创建"><a href="#触发器创建" class="headerlink" title="触发器创建"></a>触发器创建</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> 触发器名称</span><br><span class="line">&#123;BEFORE<span class="operator">|</span>AFTER&#125; &#123;<span class="keyword">INSERT</span><span class="operator">|</span><span class="keyword">UPDATE</span><span class="operator">|</span><span class="keyword">DELETE</span>&#125; <span class="keyword">ON</span> 表名</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line">触发器执行的语句块;</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">delimiter <span class="operator">/</span><span class="operator">/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">trigger</span> before_insert_test_tri</span><br><span class="line">before <span class="keyword">insert</span> <span class="keyword">on</span> test_trigger</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test_trigger_log(t_log)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;before insert ...&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span> <span class="operator">/</span><span class="operator">/</span></span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test_trigger(t_note)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;Tom&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test_trigger_log;</span><br></pre></td></tr></table></figure><p>使用NEW代替新加记录数据，使用OLD代替删除记录数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">delimiter <span class="operator">/</span><span class="operator">/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">trigger</span> salary_check_trigger</span><br><span class="line">before <span class="keyword">insert</span> <span class="keyword">on</span> employees</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">declare</span> mgr_sal <span class="keyword">double</span>;</span><br><span class="line"><span class="keyword">seLECT</span> salary <span class="keyword">into</span> mgr_sal <span class="keyword">from</span> employees </span><br><span class="line"><span class="keyword">where</span> employee_id <span class="operator">=</span> NEW.manager_id;</span><br><span class="line">if NEW.salary <span class="operator">&gt;</span> mgr_sal</span><br><span class="line">#抛出自定义错误</span><br><span class="line"><span class="keyword">THEN</span> SIGNAL <span class="keyword">sqlstate</span> <span class="string">&#x27;HY000&#x27;</span> <span class="keyword">set</span> MESSAGE_TEXT <span class="operator">=</span> <span class="string">&#x27;薪资高于领导薪资错误&#x27;</span>;</span><br><span class="line"><span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">end</span> <span class="operator">/</span><span class="operator">/</span></span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> employees(employee_id,last_name,email,hire_date,job_id,salary,manager_id)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">301</span>,<span class="string">&#x27;Tom1&#x27;</span>,<span class="string">&#x27;tom@126.com&#x27;</span>,NOW(),<span class="string">&#x27;AD_VP&#x27;</span>,<span class="number">10000</span>,<span class="number">103</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查询：insert into employees(employee_id,last_name,email,hire_date,job_id,salary,manager_id) values(301,&#x27;Tom1&#x27;,&#x27;tom@126.com&#x27;,NOW(),&#x27;AD_...错误代码： 1644</span><br><span class="line">薪资高于领导薪资错误</span><br><span class="line"></span><br><span class="line">执行耗时   : 0 sec</span><br><span class="line">传送时间   : 0 sec</span><br><span class="line">总耗时      : 0.003 sec</span><br></pre></td></tr></table></figure><h1 id="查看触发器"><a href="#查看触发器" class="headerlink" title="查看触发器"></a>查看触发器</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#查看当前所有触发器的定义</span><br><span class="line"><span class="keyword">show</span> triggers;</span><br><span class="line">#查看当前某个触发器的定义</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">trigger</span> salary_check_trigger;</span><br><span class="line">#从系统库的TRIGGERS表中查询触发器信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> information_schema.`TRIGGERS`;</span><br></pre></td></tr></table></figure><h1 id="删除触发器"><a href="#删除触发器" class="headerlink" title="删除触发器"></a>删除触发器</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">trigger</span> before_insert_test_tri;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;触发器概述&quot;&gt;&lt;a href=&quot;#触发器概述&quot; class=&quot;headerlink&quot; title=&quot;触发器概述&quot;&gt;&lt;/a&gt;触发器概述&lt;/h1&gt;&lt;p&gt;使用场景：有商品信息和库存信息两张表，添加一条商品记录的时候，也要添加一条库存记录，可以使用一个触发器，商品数据插入</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>变量、流程控制与游标MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/05/03/d8a146ec1410/"/>
    <id>https://stardust-sudo.github.io/2022/05/03/d8a146ec1410/</id>
    <published>2022-05-03T11:18:12.000Z</published>
    <updated>2022-05-03T11:18:31.083Z</updated>
    
    <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>分为系统变量和自定义变量</p><h2 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h2><p>全局系统变量：需要加global关键字，服务重启便重置</p><p>会话系统变量：需要加session关键字，不写关键字，默认会话系统变量，会话之间会话变量隔离</p><ul><li>查看系统变量</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#查看所有全局变量</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> VARIABLES;</span><br><span class="line">#查看所有会话变量</span><br><span class="line"><span class="keyword">SHOW</span> SESSION VARIABLES;</span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES;#默认会话变量</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查看满足条件的部分全局变量</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> variables <span class="keyword">like</span> <span class="string">&#x27;admin_%&#x27;</span>;</span><br><span class="line">#查看满足条件的部分会话变量</span><br><span class="line"><span class="keyword">SHOW</span> SESSION VARIABLES <span class="keyword">like</span> <span class="string">&#x27;%char%&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>查看指定的系统变量</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#查看指定的全局变量</span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@global</span>.max_connections;</span><br><span class="line">#查看指定的会话变量</span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@session</span>.pseudo_thread_id;</span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@pseudo</span>_thread_id;;#默认会话变量</span><br></pre></td></tr></table></figure><ul><li>修改系统变量的值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#修改my.ini配置文件，然后重启MySQL服务</span><br><span class="line">#使用<span class="keyword">SET</span>设置系统变量值</span><br><span class="line"><span class="keyword">SET</span> @<span class="variable">@global</span>.max_connections <span class="operator">=</span> <span class="number">150</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> max_connections <span class="operator">=</span> <span class="number">150</span>;</span><br><span class="line"><span class="keyword">SET</span> @<span class="variable">@session</span>.character_set_client <span class="operator">=</span> <span class="string">&#x27;gbk&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> SESSION character_set_client <span class="operator">=</span> <span class="string">&#x27;gbk&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h2><p>分为会话用户变量和局部变量</p><p>会话用户变量：当前连接会话有效</p><p>局部变量：只在BEGIN和END语句块中使用</p><ul><li>会话用户变量</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#变量的定义</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@temp</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@temp</span> :<span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@num</span> :<span class="operator">=</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">INTO</span> <span class="variable">@num</span> <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><ul><li>局部变量</li></ul><p>使用DECLARE声明，写在BEGIN…END中，而且只能放在第一句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_var()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">#声明局部变量</span><br><span class="line"><span class="keyword">DECLARE</span> a <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> b <span class="type">INT</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> emp_name <span class="type">VARCHAR</span>(<span class="number">25</span>);</span><br><span class="line"></span><br><span class="line">#赋值</span><br><span class="line"><span class="keyword">SET</span> a <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SET</span> b:<span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">SELECT</span> last_name <span class="keyword">INTO</span> emp_name <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="number">101</span>;</span><br><span class="line"></span><br><span class="line">#使用</span><br><span class="line"><span class="keyword">SELECT</span> a,b,emp_name;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> test_var();</span><br></pre></td></tr></table></figure><h1 id="程序出错的处理机制"><a href="#程序出错的处理机制" class="headerlink" title="程序出错的处理机制"></a>程序出错的处理机制</h1><p>定义条件：将要遇到的问题</p><p>处理程序：遇到问题时的处理方式</p><h2 id="定义条件"><a href="#定义条件" class="headerlink" title="定义条件"></a>定义条件</h2><p>定义条件就是给MySQL中的错误码命名</p><p>错误码：</p><ul><li>MySQL_error_code：数值型错误代码</li><li>sqlstate_value：长度为5的字符串类型错误代码</li><li>例如ERROR 1418(HY000)，1418是MySQL_error_code，HY000是sqlstate_value</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#定义&quot;Field_Not_Be_NULL&quot;错误名与MySQL中违反非空约束的错误类型&quot;ERROR 1048 (23000)&quot;对应</span><br><span class="line"><span class="keyword">declare</span> Field_Not_Be_NULL <span class="keyword">condition</span> <span class="keyword">for</span> <span class="number">1048</span>;</span><br><span class="line"><span class="keyword">declare</span> Field_Not_Be_NULL <span class="keyword">condition</span> <span class="keyword">for</span> <span class="keyword">sqlstate</span> <span class="string">&#x27;23000&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="定义处理程序"><a href="#定义处理程序" class="headerlink" title="定义处理程序"></a>定义处理程序</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> 处理方式 HANDLER <span class="keyword">FOR</span> 错误类型 处理语句</span><br></pre></td></tr></table></figure><ul><li>处理方式：CONTINUE&#x2F;EXIT&#x2F;UNDO（撤销，MySQL不支持）</li><li>错误类型：<ul><li>SQLSTATE ‘字符串错误码’</li><li>MySQL_error_code</li><li>错误名称</li><li>SQLWARNING：匹配所有以01开头的SQLSTATE错误代码</li><li>NOT FOUND：匹配所有以02开头的SQLSTATE错误代码</li><li>SQLEXCEPTION：匹配没有被SQLWARNING和NOT FOUND捕获的SQLSTATE错误代码</li></ul></li><li>处理语句：<ul><li>SET 变量 &#x3D; 值</li><li>BEGIN … END</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> CONTINUE HANDLER <span class="keyword">FOR</span> <span class="keyword">SQLSTATE</span> <span class="string">&#x27;42S02&#x27;</span> <span class="keyword">SET</span> <span class="variable">@INFO</span> <span class="operator">=</span> <span class="string">&#x27;NO_SUCH_TABLE&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">delimiter $</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> UpdateDataNoCondition()</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> continue handler <span class="keyword">for</span> <span class="number">1048</span> <span class="keyword">set</span> <span class="variable">@prc</span>_val <span class="operator">=</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@x</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">update</span> employees <span class="keyword">set</span> email <span class="operator">=</span> <span class="keyword">null</span> <span class="keyword">where</span> last_name <span class="operator">=</span> <span class="string">&#x27;Abel&#x27;</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="variable">@x</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">update</span> employees <span class="keyword">set</span> email <span class="operator">=</span> <span class="string">&#x27;abcdef&#x27;</span> <span class="keyword">where</span> last_name <span class="operator">=</span> <span class="string">&#x27;Abel&#x27;</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="variable">@x</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="keyword">end</span> $</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> UpdateDataNoCondition();</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@x</span>,<span class="variable">@prc</span>_val;</span><br></pre></td></tr></table></figure><h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><h2 id="分支结构之IF"><a href="#分支结构之IF" class="headerlink" title="分支结构之IF"></a>分支结构之IF</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IF 表达式<span class="number">1</span> <span class="keyword">THEN</span> 操作<span class="number">1</span></span><br><span class="line">ELSEIF 表达式<span class="number">2</span> <span class="keyword">THEN</span> 操作<span class="number">2</span></span><br><span class="line"><span class="keyword">ELSE</span> 操作<span class="number">3</span></span><br><span class="line"><span class="keyword">END</span> IF</span><br></pre></td></tr></table></figure><h2 id="分支结构之CASE"><a href="#分支结构之CASE" class="headerlink" title="分支结构之CASE"></a>分支结构之CASE</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CASE</span> 表达式</span><br><span class="line"><span class="keyword">WHEN</span> 值<span class="number">1</span> <span class="keyword">THEN</span> 结果<span class="number">1</span>或语句<span class="number">1</span>(如果是语句，需要加分号)</span><br><span class="line"><span class="keyword">WHEN</span> 值<span class="number">2</span> <span class="keyword">THEN</span> 结果<span class="number">2</span>或语句<span class="number">2</span>(如果是语句，需要加分号)</span><br><span class="line">...</span><br><span class="line"><span class="keyword">ELSE</span> 结果n或语句n(如果是语句，需要加分号)</span><br><span class="line"><span class="keyword">END</span> [<span class="keyword">CASE</span>] (如果是放在begin...end中需要加上<span class="keyword">case</span>，如果放在<span class="keyword">select</span>后面不需要)</span><br></pre></td></tr></table></figure><h2 id="循环结构之LOOP"><a href="#循环结构之LOOP" class="headerlink" title="循环结构之LOOP"></a>循环结构之LOOP</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> id <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">add_loop:LOOP</span><br><span class="line"><span class="keyword">SET</span> id <span class="operator">=</span> id <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">IF id <span class="operator">&gt;=</span> <span class="number">10</span> <span class="keyword">THEN</span> LEAVE add_loop;</span><br><span class="line"><span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">END</span> LOOP add_loop;</span><br></pre></td></tr></table></figure><h2 id="循环结构之WHILE"><a href="#循环结构之WHILE" class="headerlink" title="循环结构之WHILE"></a>循环结构之WHILE</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> num <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">WHILE num <span class="operator">&lt;=</span> <span class="number">10</span> DO</span><br><span class="line"><span class="keyword">SET</span> num <span class="operator">=</span> num <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> WHILE;</span><br></pre></td></tr></table></figure><h2 id="循环结构之REPEAT"><a href="#循环结构之REPEAT" class="headerlink" title="循环结构之REPEAT"></a>循环结构之REPEAT</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> num <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">REPEAT</span><br><span class="line"><span class="keyword">SET</span> num <span class="operator">=</span> num <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">UNTIL num <span class="operator">&gt;=</span> <span class="number">10</span>;</span><br><span class="line"><span class="keyword">END</span> REPEAT;</span><br></pre></td></tr></table></figure><h2 id="跳转语句之LEAVE语句"><a href="#跳转语句之LEAVE语句" class="headerlink" title="跳转语句之LEAVE语句"></a>跳转语句之LEAVE语句</h2><p>类似于break</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> leave_begin(<span class="keyword">IN</span> num <span class="type">INT</span>)</span><br><span class="line">begin_label:<span class="keyword">BEGIN</span></span><br><span class="line">if num <span class="operator">&lt;=</span> <span class="number">0</span> </span><br><span class="line"><span class="keyword">THEN</span> LEAVE begin_label;</span><br><span class="line"><span class="keyword">ELSE</span> <span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) <span class="keyword">from</span> employees;</span><br><span class="line"><span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><h2 id="跳转语句之ITERATE语句"><a href="#跳转语句之ITERATE语句" class="headerlink" title="跳转语句之ITERATE语句"></a>跳转语句之ITERATE语句</h2><p>类似于continue，继续下一轮循环</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> num <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">loop_label:LOOP:</span><br><span class="line"><span class="keyword">SET</span> num <span class="operator">=</span> num <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">IF num <span class="operator">&lt;</span><span class="number">10</span></span><br><span class="line"><span class="keyword">THEN</span> ITERATE loop_label;</span><br><span class="line">ELSEIF num <span class="operator">&gt;</span> <span class="number">15</span></span><br><span class="line"><span class="keyword">THEN</span> LEAVE loop_label;</span><br><span class="line"><span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">END</span> LOOP;</span><br></pre></td></tr></table></figure><h1 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h1><p>游标，类似于指针指向结果集中的一条记录，逐条读取记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> get_count_by_limit_total_salary;</span><br><span class="line"></span><br><span class="line">DELIMITER $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> get_count_by_limit_total_salary(<span class="keyword">IN</span> limit_total_salary <span class="keyword">DOUBLE</span>(<span class="number">25</span>,<span class="number">2</span>), <span class="keyword">OUT</span> total_count <span class="type">INT</span>)</span><br><span class="line">label:<span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> sal <span class="keyword">DOUBLE</span>(<span class="number">25</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">DECLARE</span> sal_sum <span class="keyword">DOUBLE</span>(<span class="number">25</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">DECLARE</span> cnt <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span> cur <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> salary <span class="keyword">FROM</span> employees <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">OPEN</span> cur;</span><br><span class="line"></span><br><span class="line"><span class="keyword">FETCH</span> cur <span class="keyword">INTO</span> sal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> sal_sum <span class="operator">=</span> sal; </span><br><span class="line"><span class="keyword">SET</span> cnt <span class="operator">=</span> <span class="number">1</span>; </span><br><span class="line"></span><br><span class="line">WHILE sal_sum <span class="operator">&lt;</span> limit_total_salary DO</span><br><span class="line"><span class="keyword">FETCH</span> cur <span class="keyword">INTO</span> sal;</span><br><span class="line"><span class="keyword">SET</span> sal_sum <span class="operator">=</span> sal_sum <span class="operator">+</span> sal;</span><br><span class="line"><span class="keyword">SET</span> cnt <span class="operator">=</span> cnt <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> WHILE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> total_count <span class="operator">=</span> cnt;</span><br><span class="line"><span class="keyword">CLOSE</span> cur;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@limit</span>_total_salary <span class="operator">=</span><span class="number">691400.00</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> get_count_by_limit_total_salary(<span class="variable">@limit</span>_total_salary,<span class="variable">@total</span>_count);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@total</span>_count;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h1&gt;&lt;p&gt;分为系统变量和自定义变量&lt;/p&gt;
&lt;h2 id=&quot;系统变量&quot;&gt;&lt;a href=&quot;#系统变量&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>存储过程与函数MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/05/02/4ffbade8638b/"/>
    <id>https://stardust-sudo.github.io/2022/05/02/4ffbade8638b/</id>
    <published>2022-05-02T12:15:46.000Z</published>
    <updated>2022-05-02T12:15:42.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="存储过程概述"><a href="#存储过程概述" class="headerlink" title="存储过程概述"></a>存储过程概述</h1><p>一组预先编译的SQL语句的封装</p><p><em>不方便调试</em></p><p>阿里开发规范：禁止使用存储过程，存储过程难以调试和扩展，没有移植性</p><h1 id="存储过程创建与调用"><a href="#存储过程创建与调用" class="headerlink" title="存储过程创建与调用"></a>存储过程创建与调用</h1><p>类型1：无参数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#创建存储过程</span><br><span class="line">DELIMITER $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> select_all_data()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">END</span>$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br><span class="line">#调用存储过程</span><br><span class="line"><span class="keyword">CALL</span> select_all_data();</span><br></pre></td></tr></table></figure><p>类型2：带OUT</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#创建存储过程</span><br><span class="line">delimiter $</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> show_min_salary(<span class="keyword">OUT</span> min_sal <span class="keyword">double</span>(<span class="number">8</span>,<span class="number">2</span>))</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(salary) <span class="keyword">into</span> min_sal</span><br><span class="line"><span class="keyword">from</span> employees;</span><br><span class="line"><span class="keyword">end</span>$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br><span class="line">#调用存储过程</span><br><span class="line"><span class="keyword">call</span> show_min_salary(<span class="variable">@ms</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="variable">@ms</span>;</span><br></pre></td></tr></table></figure><p>类型3：带IN</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> #创建存储过程</span><br><span class="line">delimiter $</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> show_someone_salary(<span class="keyword">IN</span> emp_name <span class="type">varchar</span>(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> salary</span><br><span class="line"><span class="keyword">from</span> employees</span><br><span class="line"><span class="keyword">where</span> last_name <span class="operator">=</span> emp_name;</span><br><span class="line"><span class="keyword">end</span>$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br><span class="line">#调用存储过程</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@en</span></span><br><span class="line"><span class="keyword">call</span> show_someone_salary(<span class="variable">@en</span>);</span><br></pre></td></tr></table></figure><p>类型4：带IN&#x2F;OUT和类型5：带INOUT与上述类似</p><h1 id="存储函数的使用"><a href="#存储函数的使用" class="headerlink" title="存储函数的使用"></a>存储函数的使用</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#创建存储函数</span><br><span class="line">delimiter $</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">FUNCTION</span> email_by_id(emp_id <span class="type">int</span>)</span><br><span class="line"><span class="keyword">returns</span> <span class="type">varchar</span>(<span class="number">25</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">return</span>(</span><br><span class="line"><span class="keyword">select</span> email</span><br><span class="line"><span class="keyword">from</span> employees</span><br><span class="line"><span class="keyword">where</span> employee_id <span class="operator">=</span> emp_id</span><br><span class="line">);</span><br><span class="line"><span class="keyword">end</span>$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br><span class="line">#调用存储函数</span><br><span class="line"><span class="keyword">set</span> <span class="variable">@emp</span>_id <span class="operator">=</span> <span class="number">105</span>;</span><br><span class="line"><span class="keyword">select</span> email_by_id(<span class="variable">@emp</span>_id);</span><br></pre></td></tr></table></figure><h1 id="存储过程和函数的查看、修改、删除"><a href="#存储过程和函数的查看、修改、删除" class="headerlink" title="存储过程和函数的查看、修改、删除"></a>存储过程和函数的查看、修改、删除</h1><h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#使用<span class="keyword">SHOW</span> <span class="keyword">CREATE</span>语句查看存储过程与存储函数的创建信息</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> select_all_data\G</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> email_by_id\G</span><br><span class="line">#使用<span class="keyword">SHOW</span> STATUS语句查看存储过程与存储函数的状态信息</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">procedure</span> status <span class="keyword">like</span> <span class="string">&#x27;%show%&#x27;</span>;</span><br><span class="line">#使用information_schema.Routines表中查看存储过程与存储函数的信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> information_schema.Routines</span><br><span class="line"><span class="keyword">WHERE</span> ROUTINE_NAME <span class="operator">=</span> <span class="string">&#x27;email_by_id&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><p>只是修改特性</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> show_max_salary</span><br><span class="line"><span class="keyword">SQL</span> SECURITY INVOKER</span><br><span class="line">COMMENT <span class="string">&#x27;查询最高工资&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> IF <span class="keyword">EXISTS</span> show_max_salary;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;存储过程概述&quot;&gt;&lt;a href=&quot;#存储过程概述&quot; class=&quot;headerlink&quot; title=&quot;存储过程概述&quot;&gt;&lt;/a&gt;存储过程概述&lt;/h1&gt;&lt;p&gt;一组预先编译的SQL语句的封装&lt;/p&gt;
&lt;p&gt;&lt;em&gt;不方便调试&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;阿里开发规范：禁止</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>视图MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/05/02/f7c958c4ebf6/"/>
    <id>https://stardust-sudo.github.io/2022/05/02/f7c958c4ebf6/</id>
    <published>2022-05-02T08:07:15.000Z</published>
    <updated>2022-05-02T08:14:58.437Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常见的数据库对象"><a href="#常见的数据库对象" class="headerlink" title="常见的数据库对象"></a>常见的数据库对象</h1><p>表&#x2F;数据字典(系统表)&#x2F;约束&#x2F;索引(类似于目录)</p><p>视图：一个或者多个表的数据的逻辑显示，不存储数据</p><p>存储过程：用于完成一次完整的业务处理，没有返回值。但是可以通过传出参数将多个值传给调用环境</p><p>存储函数：用于完成一次特定的计算，具有一个返回值</p><p>触发器：相当于一个事件监听器，当数据库发生特定事件后，触发器被触发，完成相应的处理</p><h1 id="视图概述"><a href="#视图概述" class="headerlink" title="视图概述"></a>视图概述</h1><h2 id="为什么使用视图"><a href="#为什么使用视图" class="headerlink" title="为什么使用视图"></a>为什么使用视图</h2><p>用户需要操作部分数据，同时不可以访问另一部分数据，这时候可以针对用户开放部分数据的视图</p><h2 id="视图的理解"><a href="#视图的理解" class="headerlink" title="视图的理解"></a>视图的理解</h2><ul><li>虚拟表，不具有数据</li><li>视图基于已有表，依赖的表称为基表</li><li>创建删除视图不影响数据表，对视图增删改，对应表也会发生变化</li><li>视图近似于存储起来的SELECT语句</li></ul><h1 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#针对于单表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> vu_emp1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,salary</span><br><span class="line"><span class="keyword">FROM</span> emps;</span><br><span class="line">#确定视图中字段名</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> vu_emp2</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> employee_id emp_id,last_name lname,salary</span><br><span class="line"><span class="keyword">from</span> emps</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span> <span class="number">8000</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> vu_emp3(emp_id,name,monthly_sal)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> employee_id,last_name ,salary</span><br><span class="line"><span class="keyword">from</span> emps</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span> <span class="number">8000</span>;</span><br><span class="line">#针对于多表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> vu_emp_dept</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> employee_id,emps.department_id,department_name</span><br><span class="line"><span class="keyword">FROM</span> emps <span class="keyword">JOIN</span> depts</span><br><span class="line"><span class="keyword">ON</span> emps.department_id <span class="operator">=</span> depts.department_id;</span><br><span class="line">#基于视图创建视图</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> vu_emp4</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name</span><br><span class="line"><span class="keyword">FROM</span> vu_emp1;</span><br></pre></td></tr></table></figure><h1 id="查看视图"><a href="#查看视图" class="headerlink" title="查看视图"></a>查看视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#查看视图</span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line">#查看视图结构</span><br><span class="line"><span class="keyword">desc</span> vu_emp1;</span><br><span class="line">#查看视图属性信息</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> status <span class="keyword">like</span> <span class="string">&#x27;vu_emp1&#x27;</span>\G</span><br><span class="line">#查看视图的详细定义信息</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">view</span> vu_emp1;</span><br></pre></td></tr></table></figure><h1 id="更新视图"><a href="#更新视图" class="headerlink" title="更新视图"></a>更新视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#修改记录</span><br><span class="line"><span class="keyword">UPDATE</span> vu_emp1</span><br><span class="line"><span class="keyword">SET</span> salary <span class="operator">=</span> <span class="number">20000</span></span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="number">101</span>;</span><br><span class="line">#删除记录</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> vu_emp1</span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="number">101</span>;</span><br></pre></td></tr></table></figure><h1 id="修改视图"><a href="#修改视图" class="headerlink" title="修改视图"></a>修改视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">VIEW</span> vu_emp1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,salary,email</span><br><span class="line"><span class="keyword">FROM</span> emps</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span> <span class="number">7000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> vu_emp1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,salary,email,hire_date</span><br><span class="line"><span class="keyword">FROM</span> emps;</span><br></pre></td></tr></table></figure><h1 id="删除视图"><a href="#删除视图" class="headerlink" title="删除视图"></a>删除视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> vu_emp4;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常见的数据库对象&quot;&gt;&lt;a href=&quot;#常见的数据库对象&quot; class=&quot;headerlink&quot; title=&quot;常见的数据库对象&quot;&gt;&lt;/a&gt;常见的数据库对象&lt;/h1&gt;&lt;p&gt;表&amp;#x2F;数据字典(系统表)&amp;#x2F;约束&amp;#x2F;索引(类似于目录)&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>约束MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/05/02/40359274d617/"/>
    <id>https://stardust-sudo.github.io/2022/05/02/40359274d617/</id>
    <published>2022-05-02T02:55:45.000Z</published>
    <updated>2022-05-02T08:16:07.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="约束概述"><a href="#约束概述" class="headerlink" title="约束概述"></a>约束概述</h1><h2 id="为什么需要约束"><a href="#为什么需要约束" class="headerlink" title="为什么需要约束"></a>为什么需要约束</h2><p>保证数据完整性</p><ul><li>实体完整性 例如同一张表中，不存在两条完全相同无法区别的记录</li><li>域完整性 例如年龄范围0~120，性别范围”男&#x2F;女“</li><li>引用完整性 例如员工所在部门，在部门表中要能找到这个部门</li><li>用户自定义完整性 例如用户名唯一、密码不为空、本部门经理工资不得高于本部门职工平均工资</li></ul><h2 id="什么是约束"><a href="#什么是约束" class="headerlink" title="什么是约束"></a>什么是约束</h2><p>约束是表级的强制规定</p><h2 id="怎么添加删除约束"><a href="#怎么添加删除约束" class="headerlink" title="怎么添加删除约束"></a>怎么添加删除约束</h2><ul><li><p>创建表CREATE TABLE时设置约束</p></li><li><p>使用ALTER TABLE添加约束</p></li><li><p>使用ALTER TABLE删除约束</p></li></ul><h2 id="如何查看表中的约束"><a href="#如何查看表中的约束" class="headerlink" title="如何查看表中的约束"></a>如何查看表中的约束</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> information_schema.`TABLE_CONSTRAINTS`</span><br><span class="line"><span class="keyword">WHERE</span> table_name <span class="operator">=</span> <span class="string">&#x27;employees&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="约束的分类"><a href="#约束的分类" class="headerlink" title="约束的分类"></a>约束的分类</h2><ul><li>约束字段的个数</li></ul><p>单列约束&#x2F;多列约束</p><ul><li>约束的作用范围</li></ul><p>列级约束：将此约束声明在对应字段后面</p><p>表级约束：在表中所有字段声明完以后，在所有字段的后面声明的约束</p><ul><li>约束的作用</li></ul><p>NOT NULL 非空约束</p><p>UNIQUE 唯一性约束</p><p>PRIMARY KEY 主键约束</p><p>FOREIGN KEY 外键约束</p><p>CHECK 检查约束</p><p>DEFAULT 默认值约束</p><h1 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h1><p>关键字NOT NULL</p><p>字段默认为NULL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#创建表时添加约束</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test1(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">last_name <span class="type">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">email <span class="type">VARCHAR</span>(<span class="number">25</span>),</span><br><span class="line">salary <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line">#在<span class="keyword">ALTER</span> <span class="keyword">TABLE</span>时添加约束</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test1</span><br><span class="line">MODIFY email <span class="type">VARCHAR</span>(<span class="number">25</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line">#在<span class="keyword">ALTER</span> <span class="keyword">TABLE</span>时删除约束</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test1</span><br><span class="line">MODIFY email <span class="type">VARCHAR</span>(<span class="number">25</span>);</span><br></pre></td></tr></table></figure><h1 id="唯一性约束"><a href="#唯一性约束" class="headerlink" title="唯一性约束"></a>唯一性约束</h1><ul><li><p>限制某一列&#x2F;字段的值不能重复</p></li><li><p>关键字UNIQUE</p></li><li><p>唯一性约束的列允许为NULL，允许出现多个NULL</p></li><li><p>唯一约束命名，默认和列名相同</p></li><li><p>MySQL会给唯一约束的列上创建一个唯一索引</p><ul><li>删除唯一性约束只能通过删除唯一索引的方式删除</li><li>删除时需要指定唯一索引名，唯一索引名和唯一约束名一样</li><li>如果创建唯一约束时未指定名称，如果是单列，就默认是列名；如果是组合列，那么默认就和（）中排在一个的列名相同；也可以自定义唯一性约束名</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#创建表时添加列级约束</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test2(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">UNIQUE</span>,#列级约束</span><br><span class="line">last_name <span class="type">VARCHAR</span>(<span class="number">15</span>),</span><br><span class="line">email <span class="type">VARCHAR</span>(<span class="number">25</span>) <span class="keyword">UNIQUE</span>,</span><br><span class="line">salary <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line">#创建表时添加表级约束</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test2(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">last_name <span class="type">VARCHAR</span>(<span class="number">15</span>),</span><br><span class="line">email <span class="type">VARCHAR</span>(<span class="number">25</span>),</span><br><span class="line">salary <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">#表级约束</span><br><span class="line"><span class="keyword">CONSTRAINT</span> uk_test2_email <span class="keyword">UNIQUE</span>(email)</span><br><span class="line">);</span><br><span class="line">#在<span class="keyword">ALTER</span> <span class="keyword">TABLE</span>时添加约束</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test2</span><br><span class="line">MODIFY last_name <span class="type">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">UNIQUE</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test2</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">constraint</span> uk_test2_salary <span class="keyword">unique</span>(salary);</span><br><span class="line">#复合的唯一性约束</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>`(</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">15</span>),</span><br><span class="line">`password` <span class="type">VARCHAR</span>(<span class="number">25</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> uk_user_name_pwd <span class="keyword">UNIQUE</span>(`name`,`password`)</span><br><span class="line">);</span><br><span class="line">#删除约束</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test2</span><br><span class="line"><span class="keyword">DROP</span> INDEX uk_test2_salary;</span><br></pre></td></tr></table></figure><h1 id="主键约束"><a href="#主键约束" class="headerlink" title="主键约束"></a>主键约束</h1><ul><li>用来唯一表中的一行记录</li><li>关键字PRIMARY KEY</li><li>主键约束&#x3D;唯一约束+非空约束</li><li>一个表最多一个主键约束</li><li>复合主键索引，这些列都不能为NULL</li><li>MySQL的主键名总是PRIMARY</li><li>创建主键约束时，自动创建主键索引</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#创建表时添加列级约束</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test4(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,#列级约束</span><br><span class="line">last_name <span class="type">VARCHAR</span>(<span class="number">15</span>),</span><br><span class="line">salary <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">email <span class="type">VARCHAR</span>(<span class="number">25</span>)</span><br><span class="line">);</span><br><span class="line">#创建表时添加表级约束</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test5(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">last_name <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">salary <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">email <span class="type">varchar</span>(<span class="number">25</span>),</span><br><span class="line">#表级约束</span><br><span class="line"><span class="keyword">constraint</span> <span class="keyword">primary</span> key(id)</span><br><span class="line">);</span><br><span class="line">#复合的主键约束</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">password <span class="type">varchar</span>(<span class="number">25</span>)</span><br><span class="line"><span class="keyword">primary</span> key(id,password)</span><br><span class="line">);</span><br><span class="line">#在<span class="keyword">ALTER</span> <span class="keyword">TABLE</span>时添加约束</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test6</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">primary</span> key (id);</span><br><span class="line">#删除约束</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test6</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PRIMARY</span> KEY;</span><br></pre></td></tr></table></figure><h1 id="自增列：AUTO-INCREMENT"><a href="#自增列：AUTO-INCREMENT" class="headerlink" title="自增列：AUTO_INCREMENT"></a>自增列：AUTO_INCREMENT</h1><ul><li>某个字段自增</li><li>关键字AUTO_INCREMENT</li><li>一个表只能有一个自增列</li><li>自增列必须是键列（主键列、唯一键列）</li><li>自增列必须是整型</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#创建表时添加</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test7(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">primary</span> KEY auto_increment,</span><br><span class="line">last_name <span class="type">VARCHAR</span>(<span class="number">15</span>)</span><br><span class="line">);</span><br><span class="line">#在<span class="keyword">ALTER</span> <span class="keyword">TABLE</span>时添加</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test8</span><br><span class="line">MODIFY id <span class="type">INT</span> AUTO_INCREMENT;</span><br><span class="line">#删除</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test8</span><br><span class="line">MODIFY id <span class="type">INT</span>;</span><br></pre></td></tr></table></figure><h1 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h1><ul><li>引用完整性，即员工表员工所在部门，必须在部门表里找得到</li><li>从表的外键列，必须参考主表的主键或唯一约束的列</li><li>外键名可以自动生成</li><li>创建外键约束时，先有主表，再有从表</li><li>删除外键约束时，先删除从表，再删除主表</li><li>从表外键和主表被参考列的名字可以不一样，但是类型一致</li><li>当创建外键约束时，系统默认会在所在列上建立对应的普通索引，索引名不是外键约束名，时列名</li><li>删除外键约束后，必须手动删除对应的索引</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#在<span class="keyword">CREATE</span> <span class="keyword">TABLE</span>时添加</span><br><span class="line">#先创建主表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">table</span> dept1(</span><br><span class="line">dept_id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">dept_name <span class="type">varchar</span>(<span class="number">15</span>)</span><br><span class="line">);</span><br><span class="line">#先创建从表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">table</span> emp1(</span><br><span class="line">emp_id <span class="type">INT</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">emp_name <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">department_id <span class="type">int</span>,</span><br><span class="line">#表级约束</span><br><span class="line"><span class="keyword">constraint</span> fk_emp1_dept_id <span class="keyword">foreign</span> key (department_id) <span class="keyword">references</span> dept(dept_id)</span><br><span class="line">);</span><br><span class="line">#在<span class="keyword">ALTER</span> <span class="keyword">TABLE</span>时添加</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp2</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> fk_emp1_dept_id <span class="keyword">foreign</span> key (department_id) <span class="keyword">references</span> dept(dept_id);</span><br><span class="line">#删除外键约束</span><br><span class="line">#第一步先查看约束名和删除外键约束</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> information_schema.`TABLE_CONSTRAINTS`</span><br><span class="line"><span class="keyword">WHERE</span> table_name <span class="operator">=</span> <span class="string">&#x27;emp2&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> emp2</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> KEY emp2_ibfk_1;#ibfk表示innodb <span class="keyword">foreign</span> key</span><br><span class="line">#第二步查看索引名和删除索引</span><br><span class="line"><span class="keyword">show</span> index <span class="keyword">from</span> emp2;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp2</span><br><span class="line"><span class="keyword">drop</span> index deptid;</span><br></pre></td></tr></table></figure><p><strong>约束等级</strong></p><ol><li>Cascade方式：在父表上update&#x2F;delete记录的时候，同步update&#x2F;delete掉子表的匹配记录</li><li>Set null方式：在父表上update&#x2F;delete记录的时候，将子表上匹配的记录的列设置为null，但是要注意子表的外键列不能设置为not null</li><li>No action方式：如果子表中有匹配的记录，则不允许对父表对应候选键进行update&#x2F;delete操作</li><li>Restrict方式：同No action方式</li><li>Set default方式：父表有变更时，子表将外键列设置成一个默认值，但是InnoDB不能识别</li></ol><p><em>推荐设置外键约束等级为ON UPDATE CASCADE ON DELETE SET NULL</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept2(</span><br><span class="line">did <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">dname <span class="type">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp2(</span><br><span class="line">eid <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">ename <span class="type">VARCHAR</span>(<span class="number">5</span>),</span><br><span class="line">deptid <span class="type">INT</span>,</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (deptid) <span class="keyword">REFERENCES</span> dept2(did) <span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">SET</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="开发场景"><a href="#开发场景" class="headerlink" title="开发场景"></a>开发场景</h1><ul><li>如果两个表有一对多、多对多关系，它们之间不一定要建外键约束</li><li>建立外键约束，对表进行增删改查将受到限制</li><li>外键约束需要成本，不适合于高并发系统</li></ul><p>阿里开发规范：不得使用外键与级联，一切外键概念在应用层解决</p><h1 id="检查约束"><a href="#检查约束" class="headerlink" title="检查约束"></a>检查约束</h1><ul><li>检查某个字段的值是否符合要求，一般指的是值的范围</li><li>关键字CHECK</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#在<span class="keyword">CREATE</span> <span class="keyword">TABLE</span>时添加</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test10(</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">last_name <span class="type">VARCHAR</span>(<span class="number">15</span>),</span><br><span class="line">salary <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">CHECK</span>(salary <span class="operator">&gt;</span> <span class="number">2000</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="默认值约束"><a href="#默认值约束" class="headerlink" title="默认值约束"></a>默认值约束</h1><ul><li>给某个字段设置默认值</li><li>关键字DEFAULT</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#在<span class="keyword">CREATE</span> <span class="keyword">TABLE</span>时添加约束</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test11(</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">last_name <span class="type">VARCHAR</span>(<span class="number">15</span>),</span><br><span class="line">salary <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="number">2000</span></span><br><span class="line">);</span><br><span class="line">#在<span class="keyword">ALTER</span> <span class="keyword">TABLE</span>时添加约束</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test11</span><br><span class="line">MODIFY salary <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="number">2000</span>;</span><br><span class="line">#在<span class="keyword">ALTER</span> <span class="keyword">TABLE</span>时删除约束</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test11</span><br><span class="line">MODIFY salary <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;约束概述&quot;&gt;&lt;a href=&quot;#约束概述&quot; class=&quot;headerlink&quot; title=&quot;约束概述&quot;&gt;&lt;/a&gt;约束概述&lt;/h1&gt;&lt;h2 id=&quot;为什么需要约束&quot;&gt;&lt;a href=&quot;#为什么需要约束&quot; class=&quot;headerlink&quot; title=&quot;为什么</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL数据类型笔记</title>
    <link href="https://stardust-sudo.github.io/2022/05/01/5944e244ee5e/"/>
    <id>https://stardust-sudo.github.io/2022/05/01/5944e244ee5e/</id>
    <published>2022-05-01T07:35:55.000Z</published>
    <updated>2022-05-02T08:11:17.095Z</updated>
    
    <content type="html"><![CDATA[<h1 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h1><h2 id="类型介绍"><a href="#类型介绍" class="headerlink" title="类型介绍"></a>类型介绍</h2><p>TINYINT&#x2F;SMALLINT&#x2F;MEDIUMINT&#x2F;INT&#x2F;BIGINT</p><h2 id="可选属性"><a href="#可选属性" class="headerlink" title="可选属性"></a>可选属性</h2><h3 id="M"><a href="#M" class="headerlink" title="M"></a>M</h3><p>M表示显示宽度，M的取值范围是(0,255)，例如**INT(5)**，当数据宽度小于5位的时候，在数字前面需要用字符填满宽度。该功能需要配合”ZEROFILL“使用，表示用”0“填满宽度，使用”ZEROFILL“时，数据类型自动UNSIGNED。插入数据超过显示宽度，仍旧按照类型的实际宽度进行保存。</p><h3 id="UNSIGNED"><a href="#UNSIGNED" class="headerlink" title="UNSIGNED"></a>UNSIGNED</h3><p>无符号数</p><h3 id="ZEROFILL"><a href="#ZEROFILL" class="headerlink" title="ZEROFILL"></a>ZEROFILL</h3><p>INT(M) UNSIGNED ZEROFILL 表示数据不够M位时，用0在左边填充，使用”ZEROFILL“时，数据类型自动UNSIGNED。</p><h1 id="定点数"><a href="#定点数" class="headerlink" title="定点数"></a>定点数</h1><p>由于使用浮点数存在精度误差，所以使用定点数DECIMAL</p><h2 id="类型介绍-1"><a href="#类型介绍-1" class="headerlink" title="类型介绍"></a>类型介绍</h2><ul><li><p>DECIMAL(M,D)：M称为精度，M&#x3D;整数位+小数位；D称为标度，表示小数位</p></li><li><p>定点数在MySQL内部以字符串的形式存储，这就决定了它一定是精准的</p></li><li><p>默认DECIMAL(10,0)</p></li></ul><h1 id="日期与时间类型"><a href="#日期与时间类型" class="headerlink" title="日期与时间类型"></a>日期与时间类型</h1><p>YEAR ”YYYY“</p><p>DATE “YYYY-MM-DD”，使用CURRENT_DATE()或者NOW()会插入当前系统的日期</p><p>TIME “HH-MM-SS”，使用CURRENT_TIME()或者NOW()会插入当前系统的时间</p><p>DATETIME “YYYY-MM-DD HH:MM:SS”，使用CURRENT_TIMESTAMP()或者NOW()会插入当前系统的时间</p><p>TIMESTAMP “YYYY-MM-DD HH:MM:SS”，存储空间比DATETIME小得多，根据时区发生变化</p><p><strong>DATETIME使用得最多，注册时间和商品发布时间建议使用TIMESTAMP，TIMESTAMP方便计算，UNIX_TIMESTAMP()</strong></p><h1 id="文本字符串类型"><a href="#文本字符串类型" class="headerlink" title="文本字符串类型"></a>文本字符串类型</h1><h2 id="CHAR-x2F-VARCHAR"><a href="#CHAR-x2F-VARCHAR" class="headerlink" title="CHAR&#x2F;VARCHAR"></a>CHAR&#x2F;VARCHAR</h2><p><strong>CHAR(M)</strong> 固定长度为M位，如果字符串实际长度比M小，会在右侧填充空格以达到指定的长度，检索CHAR类型数据时，会去除尾部空格</p><p><strong>VARCHAR(M)</strong> 可变长度，实际存储空间大小由插入字符串长度决定</p><h2 id="TEXT"><a href="#TEXT" class="headerlink" title="TEXT"></a>TEXT</h2><p>TINYTEXT&#x2F;TEXT&#x2F;MEDIUMTEXT&#x2F;LONGTEXT</p><h1 id="二进制字符串类型"><a href="#二进制字符串类型" class="headerlink" title="二进制字符串类型"></a>二进制字符串类型</h1><p>可以用来存储二进制数据，比如可以存储图片、音频和视频</p><h2 id="BINARY-x2F-VARBINARY"><a href="#BINARY-x2F-VARBINARY" class="headerlink" title="BINARY&#x2F;VARBINARY"></a>BINARY&#x2F;VARBINARY</h2><p>类似于CHAR&#x2F;VARCHAR，注意BINARY(M)中的M表示字符数而不是字节数</p><h2 id="BLOB类型"><a href="#BLOB类型" class="headerlink" title="BLOB类型"></a>BLOB类型</h2><p>TINYBLOB&#x2F;BLOB&#x2F;MEDIUMBLOB&#x2F;LONGBLOB</p><p>实际工作中，图片、音频和视频存储在服务器的磁盘上，图片、音频和视频的访问路径存储到MySQL中</p><h1 id="JSON类型"><a href="#JSON类型" class="headerlink" title="JSON类型"></a>JSON类型</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test_json(</span><br><span class="line">js json</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test_json(js)</span><br><span class="line"><span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;&#123;&quot;name&quot;:&quot;Tom&quot;,&quot;age&quot;:18,&quot;address&quot;:&#123;&quot;province&quot;:&quot;Shanghai&quot;,&quot;city&quot;:&quot;Shanghai&quot;&#125;&#125;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test_json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> js<span class="operator">-</span><span class="operator">&gt;</span><span class="string">&#x27;$.name&#x27;</span> <span class="keyword">as</span> `name`,js<span class="operator">-</span><span class="operator">&gt;</span><span class="string">&#x27;$.age&#x27;</span> <span class="keyword">as</span> age,js<span class="operator">-</span><span class="operator">&gt;</span><span class="string">&#x27;$.address.province&#x27;</span> <span class="keyword">as</span> province,js<span class="operator">-</span><span class="operator">&gt;</span><span class="string">&#x27;$.address.city&#x27;</span> <span class="keyword">as</span> city</span><br><span class="line"><span class="keyword">from</span> test_json;</span><br></pre></td></tr></table></figure><h1 id="小结及选择建议"><a href="#小结及选择建议" class="headerlink" title="小结及选择建议"></a>小结及选择建议</h1><p>在定义数据类型的时候，如果确定是整数，就用INT；如果是小数，使用定点数类型DECIMAL(M,D)；如果是日期与时间，就用DATETIME</p><p>阿里巴巴《Java开发手册》之MySQL数据库：</p><ul><li>字段非负数，则定义为UNSIGNED</li><li>小数类型使用DECIMAL，禁止使用FLOAT和DOUBLE<ul><li>在存储的时候，FLOAT和DOUBLE都存在精度损失的问题，在比较值的时候，得到不正确的结果</li><li>如果存储的数据范围超过DECIMAL的范围，建议将数据拆成整数和小数分别存储</li></ul></li><li>如果存储的字符串长度几乎相等，使用CHAR定长字符串类型</li><li>VARCHAR长度不超过5000，存储长度超过5000，使用TEXT，独立出来一张表</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;整数类型&quot;&gt;&lt;a href=&quot;#整数类型&quot; class=&quot;headerlink&quot; title=&quot;整数类型&quot;&gt;&lt;/a&gt;整数类型&lt;/h1&gt;&lt;h2 id=&quot;类型介绍&quot;&gt;&lt;a href=&quot;#类型介绍&quot; class=&quot;headerlink&quot; title=&quot;类型介绍&quot;&gt;&lt;/a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据处理之增删改MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/04/30/65faa716492e/"/>
    <id>https://stardust-sudo.github.io/2022/04/30/65faa716492e/</id>
    <published>2022-04-30T13:55:08.000Z</published>
    <updated>2022-05-02T08:15:20.364Z</updated>
    
    <content type="html"><![CDATA[<h1 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h1><h2 id="一条一条地添加数据"><a href="#一条一条地添加数据" class="headerlink" title="一条一条地添加数据"></a>一条一条地添加数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp1</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;2000-12-21&#x27;</span>,<span class="number">123.45</span>);#注意：一定要按照声明地字段的先后顺序添加</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp1(id,hire_date,salary,`name`)#指明添加的字段，<span class="keyword">VALUES</span>()内的数据</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;1999-09-09&#x27;</span>,<span class="number">4500</span>,<span class="string">&#x27;Jerry&#x27;</span>);#可以不按照声明地字段的先后顺序</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp1(id,`name`,salary)#同时插入多条数据</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;Jim&#x27;</span>,<span class="number">5000</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">&#x27;Jack&#x27;</span>,<span class="number">5500</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">&#x27;Selina&#x27;</span>,<span class="number">8700</span>);</span><br></pre></td></tr></table></figure><h2 id="将查询结果插入到表中"><a href="#将查询结果插入到表中" class="headerlink" title="将查询结果插入到表中"></a>将查询结果插入到表中</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp1(id,`name`,salary,hire_date)</span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,salary,hire_date#查询的字段一定要与添加到的表的字段一一对应</span><br><span class="line"><span class="keyword">FROM</span> atguigudb.`employees`</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;=</span> <span class="number">5000</span>;</span><br></pre></td></tr></table></figure><h1 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> emp1</span><br><span class="line"><span class="keyword">SET</span> hire_date <span class="operator">=</span> CURDATE()</span><br><span class="line"><span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> emp1</span><br><span class="line"><span class="keyword">SET</span> hire_date <span class="operator">=</span> curdate(),salary <span class="operator">=</span> <span class="number">6000</span></span><br><span class="line"><span class="keyword">WHere</span> id <span class="operator">=</span> <span class="number">4</span>;</span><br></pre></td></tr></table></figure><h1 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> emp1</span><br><span class="line"><span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;插入数据&quot;&gt;&lt;a href=&quot;#插入数据&quot; class=&quot;headerlink&quot; title=&quot;插入数据&quot;&gt;&lt;/a&gt;插入数据&lt;/h1&gt;&lt;h2 id=&quot;一条一条地添加数据&quot;&gt;&lt;a href=&quot;#一条一条地添加数据&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>创建和管理表MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/04/29/40de84763071/"/>
    <id>https://stardust-sudo.github.io/2022/04/29/40de84763071/</id>
    <published>2022-04-29T07:48:23.000Z</published>
    <updated>2022-05-02T08:11:49.975Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="一条数据存储的过程"><a href="#一条数据存储的过程" class="headerlink" title="一条数据存储的过程"></a>一条数据存储的过程</h2><ol><li>创建数据库</li><li>确认字段</li><li>创建数据表</li><li>插入数据</li></ol><h2 id="MySQL中的数据类型"><a href="#MySQL中的数据类型" class="headerlink" title="MySQL中的数据类型"></a>MySQL中的数据类型</h2><p>整数类型 INT</p><p>定点数 DECIMAL，比如DECIMAL(M,D)，M&#x3D;整数位+小数位，D&#x3D;小数位</p><p>日期时间类型 DATE。格式 YYYY-MM-DD</p><p>文本字符串类型 VARCHAR，比如 VARCHAR(10)，表示十个字符的字符串，如果插入数据大于10，会截断插入的字符串</p><h1 id="创建和管理数据库"><a href="#创建和管理数据库" class="headerlink" title="创建和管理数据库"></a>创建和管理数据库</h1><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE 数据库名;</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE 数据库名 <span class="type">CHARACTER</span> <span class="keyword">SET</span> 字符集;</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> 数据库名;#推荐使用</span><br></pre></td></tr></table></figure><h2 id="管理数据库"><a href="#管理数据库" class="headerlink" title="管理数据库"></a>管理数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> DATABASES;</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> DATABASE dbtest1\G#查看创建数据库的信息，\G表示行的形式展示</span><br><span class="line">USE dbtest1;</span><br><span class="line"><span class="keyword">SHOW</span> TABLES;</span><br><span class="line"><span class="keyword">SELECT</span> DATABASE() <span class="keyword">FROM</span> DUAL#查看当前使用的数据库</span><br><span class="line"><span class="keyword">SHOW</span> TABLES <span class="keyword">FROM</span> dbtest2;#查看指定数据库下保存的数据表</span><br></pre></td></tr></table></figure><h2 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> DATABASE dbtest1 <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="string">&#x27;utf8&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE dbtest1;</span><br><span class="line"><span class="keyword">DROP</span> DATABASE IF <span class="keyword">EXISTS</span> dbtest1;</span><br></pre></td></tr></table></figure><h1 id="创建和管理表"><a href="#创建和管理表" class="headerlink" title="创建和管理表"></a>创建和管理表</h1><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> myemp1(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">emp_name <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">hire_date <span class="type">date</span> </span><br><span class="line">);</span><br><span class="line"><span class="keyword">DESC</span> myemp1;#查看表结构</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> myemp1\G#查看创建表的信息，\G表示行的形式展示</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#基于现有表创建新表，新表中导入旧表的数据</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> myemp2</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,salary</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h2 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#添加一个字段</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> myemp1</span><br><span class="line"><span class="keyword">ADD</span> salary <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">#添加一个字段</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> myemp1</span><br><span class="line"><span class="keyword">ADD</span> salary <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>);#默认添加到表中的最后一个字段的位置</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> myemp1</span><br><span class="line"><span class="keyword">ADD</span> phone_number <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">FIRST</span>;#默认添加到表中的第一个字段的位置</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> myemp1</span><br><span class="line"><span class="keyword">ADD</span> email <span class="type">VARCHAR</span>(<span class="number">45</span>) AFTER emp_name;#默认添加到表中的emp_name后面的位置</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#修改一个字段</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> myemp1</span><br><span class="line">MODIFY emp_name <span class="type">VARCHAR</span>(<span class="number">25</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;abc&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#重命名一个字段</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> myemp1</span><br><span class="line">CHANGE salary monthly_salary <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#删除一个字段</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> myemp1</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">COLUMN</span> email;</span><br></pre></td></tr></table></figure><h2 id="重命名表"><a href="#重命名表" class="headerlink" title="重命名表"></a>重命名表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#重命名表</span><br><span class="line">RENAME <span class="keyword">TABLE</span> myemp1</span><br><span class="line"><span class="keyword">TO</span> myempl1;</span><br></pre></td></tr></table></figure><h2 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#删除表</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> myemp2;</span><br></pre></td></tr></table></figure><h2 id="清空表"><a href="#清空表" class="headerlink" title="清空表"></a>清空表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#清空表数据，保留表结构</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> employee_copy;</span><br></pre></td></tr></table></figure><h1 id="DCL中COMMIT和ROLLBACK"><a href="#DCL中COMMIT和ROLLBACK" class="headerlink" title="DCL中COMMIT和ROLLBACK"></a>DCL中COMMIT和ROLLBACK</h1><p>COMMIT：提交数据，一旦执行COMMIT，则数据被永久保存在数据库中，数据不可以回滚</p><p>ROLLBACK：回滚数据，一旦执行ROLLBACK，则可以实现数据的回滚，回滚到最近的一次COMMIT之后</p><h1 id="对比TRUNCATE-TABLE与DELETE-FROM"><a href="#对比TRUNCATE-TABLE与DELETE-FROM" class="headerlink" title="对比TRUNCATE TABLE与DELETE FROM"></a>对比TRUNCATE TABLE与DELETE FROM</h1><p>相同点：都可以实现对表中所有数据的删除，同时保留表结构</p><p>不同点：</p><ul><li>TRUNCATE TABLE 一旦执行此操作，表数据全部清除，同时，数据不可以回滚</li><li>DELETE FROM 一旦执行此操作，表数据可以全部清除，同时，数据可以回滚</li></ul><h1 id="对比DDL和DML"><a href="#对比DDL和DML" class="headerlink" title="对比DDL和DML"></a>对比DDL和DML</h1><p>DDL的操作一旦执行，就不可以回滚</p><p>DML默认情况下，一旦执行了，也不可以回滚，但是在如果在执行DML之前，执行了<code>SET autocommit =  FALSE</code>，则执行的DML操作可以实现回滚</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span> <span class="literal">FALSE</span>;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> myemp;</span><br><span class="line"><span class="keyword">ROLLBACK</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h1&gt;&lt;h2 id=&quot;一条数据存储的过程&quot;&gt;&lt;a href=&quot;#一条数据存储的过程&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>搬家前的记念</title>
    <link href="https://stardust-sudo.github.io/2022/04/29/65fc24e8fe2c/"/>
    <id>https://stardust-sudo.github.io/2022/04/29/65fc24e8fe2c/</id>
    <published>2022-04-29T03:48:56.000Z</published>
    <updated>2022-04-30T08:41:01.560Z</updated>
    
    <content type="html"><![CDATA[<p>想想还有几个礼拜就要搬离环球港地区，甚是感慨。</p><p>记得第一次来到这个区域还是大二的夏天，来华师大中北校区参加比赛。那时候，对于这个区域的印象还是模糊神秘的。</p><p>后来19年搬家到这个区域，一开始住在曹杨商城附近，每天去学校上课，需要骑车经过长长的杨柳青路，然后扎进金沙江路的滚滚车流之中。曹杨商城没什么太大的花头，曹杨商城的肯德基里，曹杨二中的学生熙熙攘攘，开在顶楼的吉买盛，老爷叔老阿姨最喜欢光顾。</p><p>研二的时候，搬家到了环球港附近，居住环境改善了很多，租金也贵了很多。去环球港的频次高了许多，环球港的装修风格是金碧辉煌的，人流量非常大，估计是因为整个普陀只有这么一个像样的CBD。由于导师不怎么来学校，我也不怎么去学校了。华师大中北校区给我留下的痕迹，远远没有金沙江路周围生活区给我留下的痕迹大。</p><p>如果要说在环球港地区，解决吃饭问题。想想有那么几个地方。环球港：大食代小贵但是好吃；各种饭店贵，质量参差不齐。曹杨路地铁站：小吃天堂，狼牙土豆，小包子，馅饼，炸鸡，应有尽有，但是需要走一站路。大渡河路地铁站：主要服务于办公楼人群，连锁店多，比如食其家，牛肉拉面，肯德基，还有一家羊肉抓饭店很好吃。大悦城：地下一层，人少，吃得还行吧。中山公园：和环球港大差不差。</p><p>平时喜欢在外面闲逛，路线大多是，中山北路，苏州河，长风公园，长风办公区，儿童医院，大悦城，金沙江路。苏州河附近，长宁和普陀形成巨大反差，长宁那一侧高档住宅鳞次栉比，普陀这一侧都是老破小。长风公园，很多老人，周末的海洋世界，很多父母带着孩子。长风办公区人烟稀少，空旷得让人感觉寂寞。儿童医院附近，都是高端小区，两三千万的那种，路上没什么人，我应该是不要住的，没有生活市井气。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;想想还有几个礼拜就要搬离环球港地区，甚是感慨。&lt;/p&gt;
&lt;p&gt;记得第一次来到这个区域还是大二的夏天，来华师大中北校区参加比赛。那时候，对于这个区域的印象还是模糊神秘的。&lt;/p&gt;
&lt;p&gt;后来19年搬家到这个区域，一开始住在曹杨商城附近，每天去学校上课，需要骑车经过长长的杨柳青</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>子查询MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/04/28/f9d4960a668c/"/>
    <id>https://stardust-sudo.github.io/2022/04/28/f9d4960a668c/</id>
    <published>2022-04-28T11:06:05.000Z</published>
    <updated>2022-05-02T08:16:52.937Z</updated>
    
    <content type="html"><![CDATA[<h1 id="子查询概述"><a href="#子查询概述" class="headerlink" title="子查询概述"></a>子查询概述</h1><h2 id="子查询的基本使用"><a href="#子查询的基本使用" class="headerlink" title="子查询的基本使用"></a>子查询的基本使用</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#查询比Abel工资高的员工</span><br><span class="line"><span class="keyword">SELECT</span> last_name,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span> (</span><br><span class="line">                <span class="keyword">SELECT</span> salary</span><br><span class="line">                <span class="keyword">FROM</span> employees</span><br><span class="line">                <span class="keyword">WHERE</span> last_name <span class="operator">=</span> <span class="string">&#x27;Abel&#x27;</span></span><br><span class="line">                );</span><br></pre></td></tr></table></figure><ul><li><p>称谓：外查询（主查询）和内查询（子查询）</p></li><li><p>子查询在主查询之前一次执行完成</p></li><li><p>子查询结果被主查询使用</p></li><li><p>子查询要被包含在括号内</p></li><li><p>将子查询放在比较条件右侧</p></li><li><p>单行操作符对应单行子查询，多行操作符对应多行子查询</p></li></ul><h2 id="子查询分类"><a href="#子查询分类" class="headerlink" title="子查询分类"></a>子查询分类</h2><ul><li>单行子查询&#x2F;多行子查询，单行子查询返回一行，多行子查询返回多行</li><li>相关子查询&#x2F;不相关子查询，分类取决于内查询和外查询是否相关</li></ul><h1 id="单行子查询"><a href="#单行子查询" class="headerlink" title="单行子查询"></a>单行子查询</h1><p>内查询返回单行数据</p><h2 id="单行比较操作符"><a href="#单行比较操作符" class="headerlink" title="单行比较操作符"></a>单行比较操作符</h2><p>&#x3D; &gt; &gt;&#x3D; &lt; &lt;&#x3D; !&#x3D;</p><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,manager_id,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> (manager_id,department_id) <span class="operator">=</span> (<span class="keyword">SELECT</span> manager_id,department_id</span><br><span class="line">                                    <span class="keyword">FROM</span> employees</span><br><span class="line">                                    <span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="number">141</span>)</span><br><span class="line"><span class="keyword">AND</span> employee_id <span class="operator">!=</span> <span class="number">141</span>;</span><br></pre></td></tr></table></figure><h2 id="HAVING中的子查询"><a href="#HAVING中的子查询" class="headerlink" title="HAVING中的子查询"></a>HAVING中的子查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_id,<span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">MIN</span>(salary) <span class="operator">&gt;</span> (</span><br><span class="line">                      <span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary)</span><br><span class="line">                      <span class="keyword">FROM</span> employees</span><br><span class="line">                      <span class="keyword">where</span> department_id <span class="operator">=</span> <span class="number">50</span></span><br><span class="line">                      );</span><br></pre></td></tr></table></figure><h1 id="多行子查询"><a href="#多行子查询" class="headerlink" title="多行子查询"></a>多行子查询</h1><p>内查询返回多行数据</p><h2 id="多行比较操作符"><a href="#多行比较操作符" class="headerlink" title="多行比较操作符"></a>多行比较操作符</h2><p>IN 等于列表中的任意一个</p><p>ANY 需要和单行比较操作符一起使用，和子查询返回的某一个值比较</p><p>ALL 需要和单行比较操作符一起使用，和子查询返回的所有值比较</p><p>SOME 实际上是ANY的别名，作用相同，一般使用ANY</p><h2 id="代码示例-1"><a href="#代码示例-1" class="headerlink" title="代码示例"></a>代码示例</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="keyword">IN</span> (</span><br><span class="line">                 <span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary)</span><br><span class="line">                 <span class="keyword">FROM</span> employees</span><br><span class="line">                 <span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line">                 );</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&lt;</span> <span class="keyword">ANY</span>(<span class="keyword">SELECT</span> salary</span><br><span class="line">                   <span class="keyword">FROM</span> employees</span><br><span class="line">                   <span class="keyword">where</span> job_id <span class="operator">=</span> <span class="string">&#x27;IT_PROG&#x27;</span></span><br><span class="line">                   )</span><br><span class="line"><span class="keyword">AND</span> job_id <span class="operator">!=</span> <span class="string">&#x27;IT_PROG&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&lt;</span> <span class="keyword">ALL</span>(<span class="keyword">SELECT</span> salary</span><br><span class="line">                   <span class="keyword">FROM</span> employees</span><br><span class="line">                   <span class="keyword">where</span> job_id <span class="operator">=</span> <span class="string">&#x27;IT_PROG&#x27;</span></span><br><span class="line">                   )</span><br><span class="line"><span class="keyword">AND</span> job_id <span class="operator">!=</span> <span class="string">&#x27;IT_PROG&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="相关子查询"><a href="#相关子查询" class="headerlink" title="相关子查询"></a>相关子查询</h1><h2 id="相关子查询执行流程"><a href="#相关子查询执行流程" class="headerlink" title="相关子查询执行流程"></a>相关子查询执行流程</h2><ol><li>从主查询获取候选列</li><li>使用主查询的数据进行查询</li><li>如果满足子查询的条件则返回该行数据</li></ol><h2 id="代码示例-2"><a href="#代码示例-2" class="headerlink" title="代码示例"></a>代码示例</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#查询员工中工资大于本部门平均工资的员工的last_name,salary和department_id</span><br><span class="line"><span class="keyword">SELECT</span> last_name,salary,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees e1</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span> (</span><br><span class="line">                <span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary)</span><br><span class="line">                <span class="keyword">FROM</span> employees e2</span><br><span class="line">                <span class="keyword">WHERE</span> e2.`department_id` <span class="operator">=</span> e1.`department_id`</span><br><span class="line">                );</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> emp.last_name,emp.salary,emp.department_id</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">      <span class="keyword">SELECT</span> department_id,<span class="built_in">AVG</span>(salary) avg_sal</span><br><span class="line">      <span class="keyword">FROM</span> employees</span><br><span class="line">      <span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line">      ) t_dept_avg_sal</span><br><span class="line"><span class="keyword">JOIN</span> employees emp</span><br><span class="line"><span class="keyword">ON</span> t_dept_avg_sal.department_id <span class="operator">=</span> emp.`department_id`</span><br><span class="line"><span class="keyword">WHERE</span> emp.`salary`<span class="operator">&gt;</span>t_dept_avg_sal.avg_sal;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#查询员工的id,salary,按照department_name排序</span><br><span class="line"><span class="keyword">select</span> emp.employee_id,emp.salary,dept.`department_name`</span><br><span class="line"><span class="keyword">from</span> employees emp <span class="keyword">join</span> departments dept</span><br><span class="line"><span class="keyword">on</span> emp.`department_id`<span class="operator">=</span>dept.`department_id`</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> dept.`department_name`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> emp.employee_id,emp.salary</span><br><span class="line"><span class="keyword">FROM</span> employees emp </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> (</span><br><span class="line">          <span class="keyword">select</span> department_name</span><br><span class="line">          <span class="keyword">from</span> departments dept</span><br><span class="line">          <span class="keyword">where</span> dept.`department_id`<span class="operator">=</span>emp.`department_id`</span><br><span class="line">          );</span><br></pre></td></tr></table></figure><p>在SELECT中，除了GROUP BY和LIMIT之外，其他位置都可以声明子查询</p><h2 id="EXISTS与NOT-EXISTS关键字"><a href="#EXISTS与NOT-EXISTS关键字" class="headerlink" title="EXISTS与NOT EXISTS关键字"></a>EXISTS与NOT EXISTS关键字</h2><p>EXISTS用来检查子查询中是否存在满足条件的行</p><ul><li>如果在子查询中不存在满足条件的行，条件返回FALSE，继续在子查询中查找</li><li>如果在子查询中存在满足条件的行，不继续在子查询中查找，条件返回TRUE</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#查询公司管理者的employee_id,last_name,job_id,department_id信息</span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,job_id,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees mgr</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">             <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">             <span class="keyword">FROM</span> employees emp</span><br><span class="line">             <span class="keyword">WHERE</span> emp.`manager_id`<span class="operator">=</span>mgr.`employee_id`</span><br><span class="line">             );</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#查询departments表中，不存在于employees表中的部门的department_id和department_name</span><br><span class="line"><span class="keyword">Select</span> department_id,department_name</span><br><span class="line"><span class="keyword">from</span> departments dept</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line">       <span class="keyword">from</span> employees emp</span><br><span class="line">       <span class="keyword">where</span> emp.`department_id`<span class="operator">=</span>dept.`department_id`</span><br><span class="line">       );</span><br></pre></td></tr></table></figure><p>多表连接比子查询效率高</p><p>另：表.* 表示表的所有字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#查询平均工资最高的job信息</span><br><span class="line"><span class="keyword">select</span> jobs.<span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> jobs</span><br><span class="line"><span class="keyword">where</span> job_id <span class="operator">=</span> (</span><br><span class="line">                <span class="keyword">SELECT</span> job_id</span><br><span class="line">                <span class="keyword">FROM</span> employees</span><br><span class="line">                <span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id</span><br><span class="line">                <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">AVG</span>(salary) <span class="keyword">DESC</span></span><br><span class="line">                LIMIT <span class="number">1</span></span><br><span class="line">                );</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;子查询概述&quot;&gt;&lt;a href=&quot;#子查询概述&quot; class=&quot;headerlink&quot; title=&quot;子查询概述&quot;&gt;&lt;/a&gt;子查询概述&lt;/h1&gt;&lt;h2 id=&quot;子查询的基本使用&quot;&gt;&lt;a href=&quot;#子查询的基本使用&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>聚合函数MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/04/28/6884d58fee8c/"/>
    <id>https://stardust-sudo.github.io/2022/04/28/6884d58fee8c/</id>
    <published>2022-04-28T00:54:56.000Z</published>
    <updated>2022-05-02T08:14:14.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="聚合函数介绍"><a href="#聚合函数介绍" class="headerlink" title="聚合函数介绍"></a>聚合函数介绍</h1><p>作用于一组数据，并对一组数据返回一个值</p><h2 id="AVG-x2F-SUM"><a href="#AVG-x2F-SUM" class="headerlink" title="AVG&#x2F;SUM"></a>AVG&#x2F;SUM</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary),<span class="built_in">SUM</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h2 id="MAX-x2F-MIN"><a href="#MAX-x2F-MIN" class="headerlink" title="MAX&#x2F;MIN"></a>MAX&#x2F;MIN</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary),<span class="built_in">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h2 id="COUNT"><a href="#COUNT" class="headerlink" title="COUNT"></a>COUNT</h2><p>作用：计算指定字段在查询结果中出现的次数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(employee_id),<span class="built_in">COUNT</span>(<span class="number">2</span><span class="operator">*</span>salary),<span class="built_in">COUNT</span>(<span class="number">1</span>),<span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p>计算指定字段出现个数时，不计算NULL值的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">count</span>(commission_pct)</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p>使用COUNT(*)&#x2F;COUNT(1)&#x2F;COUNT(具体字段)统计数据表行数，哪个效率高？</p><ul><li>使用MyISAM引擎的话，统计数据表行数只需要O(1)时间复杂度，因为MyISAM的数据表维护的元数据meta里面包含了row_count值，三者效率相同</li><li>使用InnoDB引擎的话，三者效率：COUNT(*)&#x3D;COUNT(1)&gt;COUNT(具体字段)</li></ul><h1 id="GROUP-BY的使用"><a href="#GROUP-BY的使用" class="headerlink" title="GROUP BY的使用"></a>GROUP BY的使用</h1><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查询各个部门的平均工资</span><br><span class="line"><span class="keyword">SELECT</span> department_id, <span class="built_in">AVG</span>(salary) <span class="keyword">AS</span> avg_sal</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br></pre></td></tr></table></figure><h2 id="使用多个列分组"><a href="#使用多个列分组" class="headerlink" title="使用多个列分组"></a>使用多个列分组</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查询各个depment_id,job_id的平均工资</span><br><span class="line"><span class="keyword">SELECT</span> department_id, job_id, <span class="built_in">AVG</span>(salary) <span class="keyword">as</span> avg_sal</span><br><span class="line"><span class="keyword">from</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id,job_id;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><p>SELECT中出现的非组函数的字段必须声明在GROUP BY中，反之，GROUP BY中声明的字段可以不出现在SELECT中</p></li><li><p>GROUP BY声明在FROM和WHERE后面，在ORDER BY和LIMIT前面</p></li><li><p>MySQL中GROUP BY中使用 WITH ROLLUP，所得结果多出一条对于整体情况的统计</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_id, <span class="built_in">AVG</span>(salary) <span class="keyword">AS</span> avg_sal</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id <span class="keyword">WITH</span> <span class="keyword">ROLLUP</span>;</span><br></pre></td></tr></table></figure></li></ul><h1 id="HAVING的使用"><a href="#HAVING的使用" class="headerlink" title="HAVING的使用"></a>HAVING的使用</h1><ul><li><p>用来过滤数据</p></li><li><p>如果过滤条件中使用了聚合函数，则必须使用HAVING替换WHERE</p></li><li><p>HAVING必须声明在GROUP BY后面</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#查询各个部门中最高工资比<span class="number">10000</span>高的部门信息</span><br><span class="line"><span class="keyword">SELECT</span> department_id, <span class="built_in">MAX</span>(salary) <span class="keyword">AS</span> max_sal</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> max_sal <span class="operator">&gt;</span> <span class="number">10000</span>;</span><br></pre></td></tr></table></figure><ul><li>推荐使用方式一，方式一效率高于方式二</li><li>当过滤条件中有聚合函数，则此过滤条件必须声明在HAVING中</li><li>当过滤条件中没有聚合函数，则此过滤条件声明中WHERE和HAVING都可以，但是建议声明在WHERE中</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#查询部门id为部门<span class="number">10</span>，<span class="number">20</span>，<span class="number">30</span>，<span class="number">40</span>这四个部门中最高工资比<span class="number">10000</span>高的部门信息</span><br><span class="line">#方式一</span><br><span class="line"><span class="keyword">SELECT</span> department_id, <span class="built_in">MAX</span>(salary) <span class="keyword">AS</span> max_sal</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="keyword">IN</span> (<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> max_sal <span class="operator">&gt;</span> <span class="number">10000</span>;</span><br><span class="line">#方式二</span><br><span class="line"><span class="keyword">SELECT</span> department_id, <span class="built_in">MAX</span>(salary) <span class="keyword">AS</span> max_sal</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> max_sal <span class="operator">&gt;</span> <span class="number">10000</span> <span class="keyword">AND</span> department_id <span class="keyword">IN</span> (<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>);</span><br></pre></td></tr></table></figure><p>WHERE与HAVING的对比</p><ol><li>从适用范围上讲，HAVING比WHERE广</li><li>如果过滤条件中没有聚合函数，WHERE执行效率高于HAVING</li></ol><h1 id="SQL底层执行原理"><a href="#SQL底层执行原理" class="headerlink" title="SQL底层执行原理"></a>SQL底层执行原理</h1><h2 id="SELECT语句的完整结构"><a href="#SELECT语句的完整结构" class="headerlink" title="SELECT语句的完整结构"></a>SELECT语句的完整结构</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ...,...,...(存在聚合函数)</span><br><span class="line"><span class="keyword">FROM</span> ... (<span class="keyword">LEFT</span><span class="operator">/</span><span class="keyword">RIGHT</span>) <span class="keyword">JOIN</span> ... (<span class="keyword">LEFT</span><span class="operator">/</span><span class="keyword">RIGHT</span>) <span class="keyword">JOIN</span> ...</span><br><span class="line"><span class="keyword">ON</span> 多表的连接条件</span><br><span class="line"><span class="keyword">WHERE</span> 过滤条件(不包含聚合函数)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> ...,...,...</span><br><span class="line"><span class="keyword">HAVING</span> 过滤条件(包含聚合函数)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> ...,...,... (<span class="keyword">ASC</span><span class="operator">/</span><span class="keyword">DESC</span>)</span><br><span class="line">LIMIT ...,...</span><br></pre></td></tr></table></figure><h2 id="SQL执行过程"><a href="#SQL执行过程" class="headerlink" title="SQL执行过程"></a>SQL执行过程</h2><ol><li>FROM … JOIN … 进行CROSS JOIN 笛卡尔积</li><li>ON 多表连接条件</li><li>(LEFT&#x2F;RIGHT) JOIN</li><li>WHERE</li><li>GROUP BY</li><li>HAVING</li><li>SELECT</li><li>DISTINCT 去重</li><li>ORDER BY</li><li>LIMIT</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;聚合函数介绍&quot;&gt;&lt;a href=&quot;#聚合函数介绍&quot; class=&quot;headerlink&quot; title=&quot;聚合函数介绍&quot;&gt;&lt;/a&gt;聚合函数介绍&lt;/h1&gt;&lt;p&gt;作用于一组数据，并对一组数据返回一个值&lt;/p&gt;
&lt;h2 id=&quot;AVG-x2F-SUM&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>单行函数MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/04/27/8a3487bc9a8b/"/>
    <id>https://stardust-sudo.github.io/2022/04/27/8a3487bc9a8b/</id>
    <published>2022-04-27T10:37:45.000Z</published>
    <updated>2022-05-02T08:12:18.610Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h1><h2 id="基本函数"><a href="#基本函数" class="headerlink" title="基本函数"></a>基本函数</h2><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>ABS(x)</td><td>返回x的绝对值</td></tr><tr><td>SIGN(X)</td><td>返回X的符号，正数返回1，负数返回-1，0返回0</td></tr><tr><td>PI()</td><td>返回圆周率的值</td></tr><tr><td>CEIL(x)，CEILING(x)</td><td>返回大于等于某个值的最小整数</td></tr><tr><td>FLOOR(x)</td><td>返回小于等于某个值的最大整数</td></tr><tr><td>LEAST(e1,e2,e3,…)</td><td>返回列表中的最小值</td></tr><tr><td>GREATEST(e1,e2,e3,…)</td><td>返回列表中的最大值</td></tr><tr><td>MOD(x,y)</td><td>返回x除以y以后的余数</td></tr><tr><td>RAND()</td><td>返回0~1的随机值</td></tr><tr><td>RAND(x)</td><td>返回0~1的随机值，其中x的值作为种子值，相同的x值会产生相同的随机数</td></tr><tr><td>ROUND(x)</td><td>返回一个对x的值进行四舍五入后，最接近x的整数</td></tr><tr><td>ROUND(x,y)</td><td>返回一个对x的值进行四舍五入后，最接近x的值，并保留到小数点后y位</td></tr><tr><td>TRUNCATE(x,y)</td><td>返回数字x截断为y位小数的结果</td></tr><tr><td>SQRT(x)</td><td>返回x的平方根，当x的值为负数时，返回NULL</td></tr></tbody></table><h2 id="指数与对数"><a href="#指数与对数" class="headerlink" title="指数与对数"></a>指数与对数</h2><p>POW(x,y)&#x2F;POWER(x,y)&#x2F;EXP(x)&#x2F;LN(x)&#x2F;LOG(x)&#x2F;LOG10(x)&#x2F;LOG2(x)</p><h2 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h2><p>BIN(x) 二进制&#x2F;HEX(x) 十六进制&#x2F;OCT(x) 八进制&#x2F;CONV(x,f1,f2) 返回f1进制的数转换成f2进制的数</p><h1 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h1><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>ASCII(s)</td><td>返回字符串s中第一个字符的ASCII码值</td></tr><tr><td>CHAR_LENGTH(s)</td><td>返回字符串s的字符数</td></tr><tr><td>LENGTH(s)</td><td>返回字符串s的字节数，和字符集相关</td></tr><tr><td>CONCAT(s1,s2,…,sn)</td><td>连接s1,s2,…,sn为一个字符串</td></tr><tr><td>CONCAT_WS(x,s1,s2,…,sn)</td><td>同CONCAT(s1,s2,…,sn)函数，但是字符串之间加上x</td></tr><tr><td>INSERT(str,idx,len,replacestr)</td><td>将字符串str从第idx位置开始，len个字符长的子串替换为replacestr，字符串的索引从1开始</td></tr><tr><td>REPLACE(str,a,b)</td><td>用字符串替换字符串str中所有出现的字符串a</td></tr><tr><td>UPPER(s)&#x2F;UCASE(s)</td><td>将字符串s的所有字母转换成大写字母</td></tr><tr><td>LOWER(s)&#x2F;LCASE(s)</td><td>将字符串s的所有字母转换成小写字母</td></tr><tr><td>LEFT(str,n)</td><td>返回字符串str最左边的n个字符</td></tr><tr><td>RIGHT(str,n)</td><td>返回字符串str最右边的n个字符</td></tr><tr><td>LPAD(str,len,pad)</td><td>用字符串pad对str最左边进行填充，直到str的长度为len个字符，实现右对齐效果</td></tr><tr><td>RPAD(str,len,pad)</td><td>用字符串pad对str最右边进行填充，直到str的长度为len个字符，实现左对齐效果</td></tr><tr><td>LTRIM(s)</td><td>去掉字符串s左侧的空格</td></tr><tr><td>RTRIM(s)</td><td>去掉字符串s右侧的空格</td></tr><tr><td>TRIM(s)</td><td>去掉字符串开始与结尾的空格</td></tr><tr><td>TRIM(s1 FROM s)</td><td>去掉字符串开始与结尾的s1</td></tr><tr><td>TRIM(LEADING s1 FROM s)</td><td>去掉字符串开始处的s1</td></tr><tr><td>TRIM(TRAILING s1 FROM s)</td><td>去掉字符串结尾处的s1</td></tr><tr><td>REPEAT(str,n)</td><td>返回str重复n次的结果</td></tr><tr><td>SPACE(n)</td><td>返回n个空格</td></tr><tr><td>STRCMP(s1,s2)</td><td>比较字符串s1,s2的ASCII码值的大小</td></tr><tr><td>SUBSTR(s,ind,len)</td><td>返回字符串s从ind位置开始的len个字符</td></tr><tr><td>LOCATE(substr,str)</td><td>返回字符串substr在字符串str中首次出现的位置，未找到，返回0</td></tr><tr><td>ELT(m,s1,s2,..,sn)</td><td>返回指定位置的字符串，比如m&#x3D;3，返回s3</td></tr><tr><td>FIELD(s,s1,s2,…,sn)</td><td>返回字符串s在字符串列表中第一次出现的位置</td></tr><tr><td>FIND_IN_SET(s1,s2)</td><td>返回字符串s1在字符串s2中首次出现的位置，其中，字符串s2是一个以逗号分隔的字符串，比如select find_in_set(‘aa’,’bb,aa,ccc’)返回2</td></tr><tr><td>REVERSE(s)</td><td>返回s反转后的字符串</td></tr><tr><td>NULLIF(value1,value2)</td><td>比较两个字符串，如果value1与value2相等，则返回NULL，否则返回value1</td></tr></tbody></table><h1 id="日期时间类型函数"><a href="#日期时间类型函数" class="headerlink" title="日期时间类型函数"></a>日期时间类型函数</h1><h2 id="获取日期、时间"><a href="#获取日期、时间" class="headerlink" title="获取日期、时间"></a>获取日期、时间</h2><p>CURDATE() 返回当前日期，只包含年月日</p><p>CURTIME()返回当前时间，只包含时分秒</p><p>NOW()返回当前系统日期和时间</p><h2 id="日期与时间戳的转换"><a href="#日期与时间戳的转换" class="headerlink" title="日期与时间戳的转换"></a>日期与时间戳的转换</h2><p>UNIX_TIMESTAMP()以UNIX时间戳的形式返回当前时间，SELECT UNIX_TIMESTAMP()返回1651052982</p><p>UNIX_TIMESTAMP(date)将时间date以UNIX时间戳的形式返回，SELECT UNIX_TIMESTAMP(‘2022-05-01 12:00:00’)返回1651377600</p><p>FROM_UNIXTIME(timestamp)将时间戳的时间转换为普通格式的时间</p><h1 id="流程控制函数"><a href="#流程控制函数" class="headerlink" title="流程控制函数"></a>流程控制函数</h1><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td>IF(value,value1,value2)</td><td>如果value为TRUE，返回value1，否则返回value2</td></tr><tr><td>IFNULL(value1,value2)</td><td>如果value1不为NULL，返回value1，否则返回value2</td></tr><tr><td>CASE WHEN 条件1 THEN 结果1 WHEN 条件2 THEN 结果2 … [ELSE 结果n] END</td><td>if … else if … else …</td></tr><tr><td>CASE expr WHEN 常量值1 THEN 值1 WHEN 常量值2 THEN 值2 … [ELSE 值n] END</td><td>switch … case …</td></tr></tbody></table><h2 id="加密与解密函数"><a href="#加密与解密函数" class="headerlink" title="加密与解密函数"></a>加密与解密函数</h2><p>PASSWORD(str)&#x2F;MD5(str)&#x2F;SHA(str)</p><p>ENCODE(value,password_seed)&#x2F;DECODE(value,password_seed)</p><h2 id="MySQL信息函数"><a href="#MySQL信息函数" class="headerlink" title="MySQL信息函数"></a>MySQL信息函数</h2><p>VERSION()&#x2F;CONNECTION_ID()&#x2F;DATABASE()&#x2F;USER()&#x2F;CHARSET(value)&#x2F;COLLATION(value)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数值函数&quot;&gt;&lt;a href=&quot;#数值函数&quot; class=&quot;headerlink&quot; title=&quot;数值函数&quot;&gt;&lt;/a&gt;数值函数&lt;/h1&gt;&lt;h2 id=&quot;基本函数&quot;&gt;&lt;a href=&quot;#基本函数&quot; class=&quot;headerlink&quot; title=&quot;基本函数&quot;&gt;&lt;/a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>化工专业本科回忆帖</title>
    <link href="https://stardust-sudo.github.io/2022/04/24/f3dc87f0dde6/"/>
    <id>https://stardust-sudo.github.io/2022/04/24/f3dc87f0dde6/</id>
    <published>2022-04-24T13:28:07.000Z</published>
    <updated>2022-04-24T13:28:10.259Z</updated>
    
    <content type="html"><![CDATA[<p>本科就读于化工专业很强势的学校，信息学院的院士也是搞化工的哈哈。我按照时间的顺序叙述，由于毕业两三年了，记忆可能有一些小差错。</p><p>大一的时候，就是各种基础课，高数线代等等，还有C语言这些课，工科该有的基础课都有。</p><p>大二的时候，开始上四大化学了，比较喜欢物理化学，有机学得不好，无机化学无感，分析化学挺头痛的。这时候各种实验课也出现了，基本上每一门化学课都对应有实验课，大学物理也有实验课，实验楼都在比较远的地方，所以上实验课需要跑很远。实验课课上操作还好，主要头疼的是预习报告和实验报告，都没什么太大意义，就是大段大段的写字，我记得巅峰时刻一周三份预习报告，三份实验报告，写起来真的挺累的。</p><p>大三的时候，上课上三传一反，化工原理，化工热力学，反应工程等等，我还是挺喜欢的，很工科哈哈。我记得因为学校评了一个什么认证，所以加了很多课，然后每一门课都有实验课，所以整体的学业压力非常大。大三很多同学都进实验室了，做大创或者做实验发文章，都是为了保研做准备。</p><p>大四的时候，上半学期还是一堆课，分离工程什么的，还有一堆实验课。然后上完课以后，还有实习，去金山的化工厂，早上很早就要起来，坐班车一两个小时到化工园区。说是实习，实际上就是听听讲座，逛逛园区，味道还挺大的。里面的工程师不会让你干活的，谁放心呢。记得里面的食堂做的甜点还挺好吃的。上半学期结束就是考研了。下半学期就是搞毕业论文了，有两种，做模拟的和做实验的。做模拟挺爽的，待在宿舍就行。做实验的就要天天去实验室了，这时候可以感受一下化工读研是什么状态，化工读研我放后面讲。本科毕业论文还是比较水的，那些教授说着我很严格的，实际上还是放你过的。</p><p>整体上我评价一下化工本科生活的话，那就是课多实验多，很累很辛苦。</p><p>最后讲一下同学的去向吧。一些同学直博清华天大化工。一些同学转行了，去了金融业，或者跨考去了CS，还有去国外读研CS的。大部分同学都是保研考研了本校化工。化工读研还是挺苦的，每天在实验室从早上八点到晚上十一点做实验，导师push你发论文，还有做项目。再说说就业情况，有同学去了会计所，也有码农的，留在化工行业的话，有同学本科毕业进了中石油，研究生毕业的话，可以去设计院还有外企比如巴斯夫之类，还有去化工零售行业当客户经理。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本科就读于化工专业很强势的学校，信息学院的院士也是搞化工的哈哈。我按照时间的顺序叙述，由于毕业两三年了，记忆可能有一些小差错。&lt;/p&gt;
&lt;p&gt;大一的时候，就是各种基础课，高数线代等等，还有C语言这些课，工科该有的基础课都有。&lt;/p&gt;
&lt;p&gt;大二的时候，开始上四大化学了，比较</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>天坑专业跑路有感</title>
    <link href="https://stardust-sudo.github.io/2022/04/24/4ee543e571ec/"/>
    <id>https://stardust-sudo.github.io/2022/04/24/4ee543e571ec/</id>
    <published>2022-04-24T13:26:08.000Z</published>
    <updated>2022-04-25T14:36:08.847Z</updated>
    
    <content type="html"><![CDATA[<p>我本科化工，读研CS，对转行这件事有了一些感悟。</p><p>- 我觉得非科班和科班最大的差距倒不是理论，那些基础内容看书看视频就能赶上，差距体现在项目和实习上，优秀的科班本科四年参与了很多项目，参加了很多比赛，有几段实习，在面试时候和面试官有得聊，这方面对于非科班优势很大。</p><p>- 读研CS并不一定能助力你以后的发展。CS也分很多方向，有同学天坑跨专业保研到ai大牛手下，发了好文章，读研看的资料，对于找算法岗有用，这种就是因为读研CS收益。而大部分天坑出身的考研党，选不到好方向的老师当导师，因为这些老师大部分已经被保研的同学抢了，剩下一些老师被考研同学里面优秀的的科班同学抢了，很多天坑跨考的同学，只能选到一些冷门方向的老师。冷门方向老师，读研期间让你做的项目和发的论文，对找工作用处不大，冷门方向工业界应用还不广泛，也就是说在冷门CS方向读研用处不大。</p><p>- 想以后进入计算机行业，并不一定需要读CS的研究生。可以选择保研本专业，或者选个好考的专业，然后选择一个比较松的导师，平时自学计算机的东西，一样是可以进好公司的。</p><p>- 天坑学生选择进入CS需要慎重，某乎上一堆跨专业进大厂的例子看得的确很爽，但是实际上，天坑跨专业没有那么容易的，而且各行各业转CS，搞得校招非常卷。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我本科化工，读研CS，对转行这件事有了一些感悟。&lt;/p&gt;
&lt;p&gt;- 我觉得非科班和科班最大的差距倒不是理论，那些基础内容看书看视频就能赶上，差距体现在项目和实习上，优秀的科班本科四年参与了很多项目，参加了很多比赛，有几段实习，在面试时候和面试官有得聊，这方面对于非科班优势很</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>多表查询MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/04/19/103008253ca0/"/>
    <id>https://stardust-sudo.github.io/2022/04/19/103008253ca0/</id>
    <published>2022-04-19T04:49:01.000Z</published>
    <updated>2022-05-02T08:12:41.030Z</updated>
    
    <content type="html"><![CDATA[<h1 id="多表连接"><a href="#多表连接" class="headerlink" title="多表连接"></a>多表连接</h1><p>为什么设置多表，而不是集中一张表</p><ol><li>集中在一张表，会出现数据的冗余</li><li>多张表，可以同时访问，集中在一张表，这张表被锁定之后，其他不能进行访问</li></ol><h2 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h2><p>A表与B表连接，A表的每一条记录与B表的每一条记录都匹配过</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees,departments;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> employee_id,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> departments;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> employee_id,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> employee_id,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="keyword">JOIN</span> departments;</span><br></pre></td></tr></table></figure><p>多表查询需要有连接条件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> e.employee_id,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`;</span><br></pre></td></tr></table></figure><h1 id="多表查询的分类"><a href="#多表查询的分类" class="headerlink" title="多表查询的分类"></a>多表查询的分类</h1><h2 id="等值连接-x2F-非等值连接"><a href="#等值连接-x2F-非等值连接" class="headerlink" title="等值连接&#x2F;非等值连接"></a>等值连接&#x2F;非等值连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 非等值连接</span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,e.salary,j.grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">JOIN</span> job_grades j</span><br><span class="line"><span class="keyword">ON</span> e.`salary`<span class="operator">&gt;=</span>j.`lowest_sal`<span class="keyword">AND</span> e.`salary`<span class="operator">&lt;=</span>j.`highest_sal`;</span><br></pre></td></tr></table></figure><h2 id="自连接-x2F-非自连接"><a href="#自连接-x2F-非自连接" class="headerlink" title="自连接&#x2F;非自连接"></a>自连接&#x2F;非自连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 自连接</span><br><span class="line"><span class="keyword">SELECT</span> emp.employee_id,emp.last_name,mgr.employee_id,mgr.last_name</span><br><span class="line"><span class="keyword">FROM</span> employees emp <span class="keyword">JOIN</span> employees mgr</span><br><span class="line"><span class="keyword">ON</span> emp.`manager_id`<span class="operator">=</span>mgr.`employee_id`;</span><br></pre></td></tr></table></figure><h2 id="内连接-x2F-外连接"><a href="#内连接-x2F-外连接" class="headerlink" title="内连接&#x2F;外连接"></a>内连接&#x2F;外连接</h2><p><strong>内连接</strong>：合并具有同一列的两个以上的表的行，结果集中不包含一个表与另一个表不匹配的行</p><p><strong>外连接</strong>：合并具有同一列的两个以上的表的行，结果集中除了包含一个表与另一个表匹配的行之外，还查询到左表或者右表中不匹配的行</p><p><strong>外连接的分类</strong>：左外连接、右外连接、满外连接</p><p><strong>左外连接</strong>：两个表在连接过程中除了返回满足连接条件的行以外，还返回左表中不满足条件的行</p><p><strong>右外连接</strong>：两个表在连接过程中除了返回满足连接条件的行以外，还返回右表中不满足条件的行</p><p><strong>满外连接</strong>：两个表在连接过程中除了返回满足连接条件的行以外，还返回左右表中不满足条件的行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 内连接</span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,d.department_name,l.city</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">JOIN</span> departments d </span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">JOIN</span> locations l</span><br><span class="line"><span class="keyword">ON</span> d.`location_id`<span class="operator">=</span>l.`location_id`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,d.department_name,city</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">JOIN</span> departments d <span class="keyword">JOIN</span> locations l</span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id` <span class="keyword">AND</span> d.`location_id`<span class="operator">=</span>l.`location_id`;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 左外连接</span><br><span class="line"># 查询所有员工的last_name,department_name信息</span><br><span class="line"><span class="keyword">SELECT</span> e.employee_id,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`;</span><br><span class="line"># 右外连接</span><br><span class="line"><span class="keyword">SELECT</span> e.employee_id,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`;</span><br><span class="line"># 右外连接</span><br><span class="line"><span class="keyword">SELECT</span> e.employee_id,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e  <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`;</span><br></pre></td></tr></table></figure><h1 id="UNION的使用"><a href="#UNION的使用" class="headerlink" title="UNION的使用"></a>UNION的使用</h1><p>利用UNION关键字，可以给出多条SELECT语句，并将他们的结果集组合成单个结果集。合并时，两个表对应的列数和数据类型必须相同，并且互相对应。各个SELECT语句之间使用UNION或UNION ALL关键字分隔。</p><p>语法格式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">column</span>,... <span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">UNION</span> [<span class="keyword">ALL</span>]</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">column</span>,... <span class="keyword">FROM</span> table2;</span><br></pre></td></tr></table></figure><p>UNION操作符：返回两个查询的结果集的并集，并去除重复记录</p><p>UNION ALL操作符：返回两个查询的结果集的并集，不去除重复记录</p><p>UNION ALL执行效率比UNION高，优先使用UNION ALL，UNION需要去重，执行效率低</p><h1 id="7种UNION操作"><a href="#7种UNION操作" class="headerlink" title="7种UNION操作"></a>7种UNION操作</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"># 内连接</span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">JOIN</span> departments d </span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`;</span><br><span class="line"># 左外连接</span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`;</span><br><span class="line"># 右外连接</span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`;</span><br><span class="line"># 左表<span class="operator">-</span>右表</span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">WHERE</span> d.department_id <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"># 右表<span class="operator">-</span>左表</span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">WHERE</span> e.department_id <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"># 满外连接 左表并右表</span><br><span class="line"># 左外连接 <span class="keyword">UNION</span> <span class="keyword">ALL</span> 右表<span class="operator">-</span>左表</span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">WHERE</span> e.department_id <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"># 左表并右表<span class="operator">-</span>左表交右表</span><br><span class="line"># 左表<span class="operator">-</span>右表 <span class="keyword">UNION</span> <span class="keyword">ALL</span> 右表<span class="operator">-</span>左表</span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">WHERE</span> d.department_id <span class="keyword">IS</span> <span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,d.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line"><span class="keyword">ON</span> e.`department_id`<span class="operator">=</span>d.`department_id`</span><br><span class="line"><span class="keyword">WHERE</span> e.department_id <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><h1 id="SQL99语法新特性：自然连接"><a href="#SQL99语法新特性：自然连接" class="headerlink" title="SQL99语法新特性：自然连接"></a>SQL99语法新特性：自然连接</h1><p>自然连接会自动查询两张表中相同的字段，然后进行等值连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,department_name</span><br><span class="line"><span class="keyword">FROM</span> employee e <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> e.department_id <span class="operator">=</span> d.department_id</span><br><span class="line"><span class="keyword">AND</span> e.manager_id <span class="operator">=</span> d.manager_id;</span><br><span class="line"># 等价于</span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,department_name</span><br><span class="line"><span class="keyword">FROM</span> employee e <span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> departments d；</span><br></pre></td></tr></table></figure><h1 id="SQL99语法新特性：USING"><a href="#SQL99语法新特性：USING" class="headerlink" title="SQL99语法新特性：USING"></a>SQL99语法新特性：USING</h1><p>USING括号内填入同名字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,department_name</span><br><span class="line"><span class="keyword">FROM</span> employee e <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> e.department_id <span class="operator">=</span> d.department_id;</span><br><span class="line"># 等价于</span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,department_name</span><br><span class="line"><span class="keyword">FROM</span> employee e <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">USING</span> (department_id);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;多表连接&quot;&gt;&lt;a href=&quot;#多表连接&quot; class=&quot;headerlink&quot; title=&quot;多表连接&quot;&gt;&lt;/a&gt;多表连接&lt;/h1&gt;&lt;p&gt;为什么设置多表，而不是集中一张表&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;集中在一张表，会出现数据的冗余&lt;/li&gt;
&lt;li&gt;多张表，可以同</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>排序与分页MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/04/18/371a1b2fbe40/"/>
    <id>https://stardust-sudo.github.io/2022/04/18/371a1b2fbe40/</id>
    <published>2022-04-18T10:53:00.000Z</published>
    <updated>2022-05-02T08:14:36.652Z</updated>
    
    <content type="html"><![CDATA[<h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><h2 id="排序规则"><a href="#排序规则" class="headerlink" title="排序规则"></a>排序规则</h2><ul><li>使用ORDER BY子句进行排序<ul><li>ASC(ascend) 升序</li><li>DESC(descend) 降序</li></ul></li><li>ORDER BY子句放在SELECT语句结尾</li><li>没有使用ORDER BY子句的情况下，默认呈现的顺序是数据添加的先后顺序</li><li>ORDER BY子句默认使用ASC升序</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><ul><li>列的别名只能在ORDER BY子句中使用，不能在WHERE子句中使用</li><li>二级排序</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 显示员工排序，按照department_id的降序排列，salary的升序排序</span><br><span class="line"><span class="keyword">SELECT</span> employee_id,salary,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> department_id <span class="keyword">DESC</span>, salary <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><h1 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">20</span>;#偏移量为<span class="number">0</span>，显示的条目数为<span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">LIMIT <span class="number">20</span>;#偏移量省略时默认为<span class="number">0</span>，显示的条目数为<span class="number">20</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 每页显示pageSize条记录，此时显示第pageNo页</span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">LIMIT (pageNo<span class="number">-1</span>)<span class="operator">*</span>pageSize,pageSize;</span><br></pre></td></tr></table></figure><p>WHERE … ORDER BY … LIMIT声明顺序如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span> <span class="number">6000</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">10</span>;</span><br></pre></td></tr></table></figure><p>MySQL8.0新特性：LIMIT … OFFSET …</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_id,last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">LIMIT <span class="number">31</span>,<span class="number">2</span>;</span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">LIMIT <span class="number">2</span> <span class="keyword">OFFSET</span> <span class="number">31</span>;#<span class="number">2</span>表示显示的条目数，<span class="number">31</span>表示偏移量</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;排序&quot;&gt;&lt;a href=&quot;#排序&quot; class=&quot;headerlink&quot; title=&quot;排序&quot;&gt;&lt;/a&gt;排序&lt;/h1&gt;&lt;h2 id=&quot;排序规则&quot;&gt;&lt;a href=&quot;#排序规则&quot; class=&quot;headerlink&quot; title=&quot;排序规则&quot;&gt;&lt;/a&gt;排序规则&lt;/h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>运算符MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/04/18/f70d0a6aa832/"/>
    <id>https://stardust-sudo.github.io/2022/04/18/f70d0a6aa832/</id>
    <published>2022-04-18T10:52:00.000Z</published>
    <updated>2022-05-02T08:16:31.102Z</updated>
    
    <content type="html"><![CDATA[<h1 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h1><p>+ - * &#x2F; div % mod</p><h1 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h1><p>比较结果为真返回1，比较结果为假返回0，其他情况返回null</p><ol><li>&#x3D; &lt;&#x3D;&gt; &lt;&gt; !&#x3D; &lt; &lt;&#x3D; &gt; &gt;&#x3D;</li></ol><p>&lt;&#x3D;&gt;安全等于，可以用来对NULL进行判断，在两个操作数均为NULL时，返回1；在一个操作数为NULL时，返回0</p><ol start="2"><li><p>IS NULL&#x2F; IS NOT NULL&#x2F;ISNULL(param)</p></li><li><p>LEAST(p1,p2,p3)&#x2F;GREATEST(p1,p2,p3)</p></li><li><p>BETWEEEN a AND b 表示[a,b]之内，包含边界</p></li><li><p>IN (set)&#x2F;NOT IN (set)</p></li><li><p>LIKE 模糊查询</p></li></ol><p>查询last_name包含a的员工信息，<code>... WHERE last_name LIKE &#39;%a%&#39;;</code>,百分号  %  代表不确定个数的字符，包括0个</p><p>查询last_name第二个字符是a的员工信息，<code>... WHERE last_name LIKE &#39;_a%&#39;</code>，下划线  _  代表一个不确定的字符</p><p>查询last_name第二个字符是_且第三个字符是a的员工信息，<code>... WHERE last_name LIKE &#39;_\_a%&#39;</code>，斜杠  \  表示转义</p><ol start="7"><li>REGEXP&#x2F;RLIKE 正则表达式</li></ol><h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><p>NOT&#x2F;!</p><p>AND&#x2F;&amp;&amp;</p><p>OR&#x2F;||</p><p>XOR</p><p>AND优先级高于OR</p><h1 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h1><p>&amp;&#x2F;|&#x2F;^&#x2F;~&#x2F;&gt;&gt;&#x2F;&lt;&lt;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;算术运算符&quot;&gt;&lt;a href=&quot;#算术运算符&quot; class=&quot;headerlink&quot; title=&quot;算术运算符&quot;&gt;&lt;/a&gt;算术运算符&lt;/h1&gt;&lt;p&gt;+ - * &amp;#x2F; div % mod&lt;/p&gt;
&lt;h1 id=&quot;比较运算符&quot;&gt;&lt;a href=&quot;#比较运算符&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>基本的SELECT语句MySQL笔记</title>
    <link href="https://stardust-sudo.github.io/2022/04/18/b907b72be848/"/>
    <id>https://stardust-sudo.github.io/2022/04/18/b907b72be848/</id>
    <published>2022-04-18T10:50:38.311Z</published>
    <updated>2022-05-02T08:13:52.945Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL概述"><a href="#SQL概述" class="headerlink" title="SQL概述"></a>SQL概述</h1><h2 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h2><ul><li><p>DDL(Data Definition Language，数据定义语言)，这些语句定义了不同的数据库、表、视图、索引等数据库对象、还可以用来创建、删除、修改数据库和数据表的结构</p><ul><li>主要的语句关键字包括CREATE、DROP、ALTER、RENAME、TRUNCATE（清空数据）等</li></ul></li><li><p>DML(Data Manipulation Language，数据操作语言)，用于添加、删除、更新和查询数据库记录，并检查数据完整性</p><ul><li>主要的语句关键字包括INSERT、DELETE、UPDATE、SELECT等</li><li>SELECT是SQL语言的基础，最为重要</li></ul></li><li><p>DCL(Data Control Language，数据控制语言)，用于定义数据库、表、字段、用户的访问权限和安全级别</p><ul><li>主要的语句关键字包括GRANT、REVOKE、COMMIT、ROLLBACK、SAVEPOINT等</li></ul></li></ul><h1 id="SQL语言的规则与规范"><a href="#SQL语言的规则与规范" class="headerlink" title="SQL语言的规则与规范"></a>SQL语言的规则与规范</h1><h2 id="基本规则"><a href="#基本规则" class="headerlink" title="基本规则"></a>基本规则</h2><ul><li>各个子句分行写</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> Emp;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">1001</span>,<span class="string">&#x27;TOM&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>语句以；、\g或者\G结尾，;、\g与\G效果不同</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show create table employee;</span><br><span class="line">+----------+---------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Table    | Create Table                                                                                                              |</span><br><span class="line">+----------+---------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| employee | CREATE TABLE `employee` (</span><br><span class="line">  `id` int DEFAULT NULL,</span><br><span class="line">  `name` varchar(15) DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 |</span><br><span class="line">+----------+---------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.04 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; show create table employee\g</span><br><span class="line">+----------+---------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Table    | Create Table                                                                                                              |</span><br><span class="line">+----------+---------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| employee | CREATE TABLE `employee` (</span><br><span class="line">  `id` int DEFAULT NULL,</span><br><span class="line">  `name` varchar(15) DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 |</span><br><span class="line">+----------+---------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; show create table employee\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: employee</span><br><span class="line">Create Table: CREATE TABLE `employee` (</span><br><span class="line">  `id` int DEFAULT NULL,</span><br><span class="line">  `name` varchar(15) DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li>字符串、日期时间类型的变量需要使用一对单引号’’表示</li><li>列的别名使用双引号””表示，不建议省略as</li></ul><h2 id="SQL大小写规范"><a href="#SQL大小写规范" class="headerlink" title="SQL大小写规范"></a>SQL大小写规范</h2><ul><li>MySQL在Windows环境下大小写不敏感</li><li>MySQL在Linux环境下大小写不敏感<ul><li>数据库名、表名、表的别名、变量名是严格区分大小写的</li><li>关键字、函数名、列名（或字段名）、列的别名（或字段的别名）是忽略大小写的</li></ul></li><li>推荐采用统一的书写规范<ul><li>数据库名、表名、表别名、字段名、字段别名等都小写</li><li>SQL关键字、函数名、绑定变量等都大写</li></ul></li></ul><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 单行注释</span><br><span class="line"><span class="comment">-- 单行注释</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="导入现有数据"><a href="#导入现有数据" class="headerlink" title="导入现有数据"></a>导入现有数据</h2><ol><li>命令行下输入<code>source 文件的全路径名</code></li><li>基于具体的图形化界面工具导入数据</li></ol><h1 id="基本的SELECT语句"><a href="#基本的SELECT语句" class="headerlink" title="基本的SELECT语句"></a>基本的SELECT语句</h1><h2 id="SELECT-…"><a href="#SELECT-…" class="headerlink" title="SELECT …"></a>SELECT …</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">9</span><span class="operator">/</span><span class="number">2</span></span><br><span class="line"><span class="keyword">FROM</span> DUAL;# DUAL伪表</span><br></pre></td></tr></table></figure><h2 id="SELECT-…-FROM-…"><a href="#SELECT-…-FROM-…" class="headerlink" title="SELECT … FROM …"></a>SELECT … FROM …</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># <span class="operator">*</span>表示表中所有字段</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">SELECT</span> employee_id,last_name,salary</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h2 id="列的别名"><a href="#列的别名" class="headerlink" title="列的别名"></a>列的别名</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">as</span>全称alias（别名），可以省略</span><br><span class="line"># 列的别名可以用一对&quot;&quot;引起来</span><br><span class="line"><span class="keyword">SELECT</span> employee_id emp_id,last_name <span class="keyword">AS</span> lname,department_id &quot;部门id&quot;, salary <span class="operator">*</span> <span class="number">12</span> &quot;annual sal&quot;</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h2 id="去除重复行"><a href="#去除重复行" class="headerlink" title="去除重复行"></a>去除重复行</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h2 id="空值参与计算"><a href="#空值参与计算" class="headerlink" title="空值参与计算"></a>空值参与计算</h2><p>空值：null</p><p>空值参与运算，结果为空值null</p><h2 id="着重号-96-96"><a href="#着重号-96-96" class="headerlink" title="着重号&#96;&#96;"></a>着重号&#96;&#96;</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 关键字作为表名，使用``着重号区别于关键字</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `<span class="keyword">order</span>`;</span><br></pre></td></tr></table></figure><h2 id="查询常数"><a href="#查询常数" class="headerlink" title="查询常数"></a>查询常数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;Company&#x27;</span>,<span class="number">123</span>,employee_id,last_name</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h1 id="显示表结构"><a href="#显示表结构" class="headerlink" title="显示表结构"></a>显示表结构</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DESCRIBE</span> employees;</span><br><span class="line"><span class="keyword">DESC</span> employees;</span><br></pre></td></tr></table></figure><h1 id="过滤数据"><a href="#过滤数据" class="headerlink" title="过滤数据"></a>过滤数据</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> deoartment_id <span class="operator">=</span> <span class="number">90</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SQL概述&quot;&gt;&lt;a href=&quot;#SQL概述&quot; class=&quot;headerlink&quot; title=&quot;SQL概述&quot;&gt;&lt;/a&gt;SQL概述&lt;/h1&gt;&lt;h2 id=&quot;SQL分类&quot;&gt;&lt;a href=&quot;#SQL分类&quot; class=&quot;headerlink&quot; title=&quot;SQL</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL环境搭建笔记</title>
    <link href="https://stardust-sudo.github.io/2022/04/16/ac67afe54464/"/>
    <id>https://stardust-sudo.github.io/2022/04/16/ac67afe54464/</id>
    <published>2022-04-16T15:17:09.000Z</published>
    <updated>2022-05-02T08:10:54.635Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL的卸载"><a href="#MySQL的卸载" class="headerlink" title="MySQL的卸载"></a>MySQL的卸载</h1><ul><li>停止MySQL服务 打开任务管理器，停止MySQL服务</li><li>卸载软件 在控制面板卸载MySQL</li><li>找到MySQL的目录，删除数据（选做）</li><li>删除环境变量</li><li>重启电脑</li></ul><h1 id="MySQL的下载、安装与配置"><a href="#MySQL的下载、安装与配置" class="headerlink" title="MySQL的下载、安装与配置"></a>MySQL的下载、安装与配置</h1><h2 id="MySQL的四大版本"><a href="#MySQL的四大版本" class="headerlink" title="MySQL的四大版本"></a>MySQL的四大版本</h2><ul><li>Community Server 社区版本，开源免费，不提供官方技术支持</li><li>Enterprise Edition  企业版本，付费，官方技术支持</li><li>Cluster 集群版本，开源免费</li><li>Cluster CGE 高级集群版本，付费</li></ul><p> MySQL Workbench(GUITOOL)一款专为MySQL设计的图形界面管理工具</p><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><p>官网</p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><ul><li>Choosing a Setup Type 选择Custom自定义</li><li>Select Products 选择MySQL Server，点击MySQL Server，会跳出来一个Advanced Options，点击Advanced Options，选择软件安装路径和数据库存储路径</li><li>环境变量配置</li></ul><h1 id="MySQL的登录"><a href="#MySQL的登录" class="headerlink" title="MySQL的登录"></a>MySQL的登录</h1><h2 id="服务的启动和停止"><a href="#服务的启动和停止" class="headerlink" title="服务的启动和停止"></a>服务的启动和停止</h2><p>图形化界面 进入计算机管理的界面</p><p>命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动MySQL服务命令</span><br><span class="line">net start MySQL服务名</span><br><span class="line"># 停止MySQL服务命令</span><br><span class="line">net stop MySQL服务名</span><br></pre></td></tr></table></figure><h2 id="登录与退出"><a href="#登录与退出" class="headerlink" title="登录与退出"></a>登录与退出</h2><ul><li>连接数据库的命令</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p -hlocalhost -P3306</span><br></pre></td></tr></table></figure><p>-u 用户名</p><p>-p 密码</p><p>-h IP，默认127.0.0.1，此参数可省略</p><p>-P 端口号 默认3306，此参数可省略</p><ul><li>查看mysql版本</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql --version</span><br></pre></td></tr></table></figure><ul><li>退出登录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure><h1 id="MySQL演示使用"><a href="#MySQL演示使用" class="headerlink" title="MySQL演示使用"></a>MySQL演示使用</h1><ul><li>查看所有的数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><p><strong>information_scheme</strong> MySQL自带的数据库，主要保存MySQL数据库服务器的系统信息，比如数据库的名称、数据表的名称，字段名称、存取权限、数据文件所在的文件夹和系统使用的文件夹</p><p><strong>performance_scheme</strong> MySQL自带的数据库，用来监控MySQL的各类性能指标</p><p><strong>sys</strong> MySQL自带的数据库，主要作用是以一种更容易被理解的方式展现MySQL数据库服务器的各类性能指标，帮助系统管理员和开发人员监控MySQL的技术性能</p><p><strong>mysql</strong> 保存了MySQL数据库服务器运行时需要的系统信息，比如数据文件夹、当前使用的字符集、约束检查信息等</p><ul><li>创建数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database dbtest2;</span><br></pre></td></tr></table></figure><ul><li>创建表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employee(id <span class="type">int</span>,name <span class="type">varchar</span>(<span class="number">15</span>));</span><br></pre></td></tr></table></figure><ul><li>查询数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee;</span><br></pre></td></tr></table></figure><ul><li>插入数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> employee <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;tom&#x27;</span>);</span><br></pre></td></tr></table></figure><p>5.7版本下<code>insert into employee values(1002,&#39;杰瑞&#39;);</code>会报错，charset&#x3D;latin1</p><p>8.0版本下<code>insert into employee values(1002,&#39;杰瑞&#39;);</code> 正常运行，charset&#x3D;utf8</p><ul><li>展示表&#x2F;数据库的元数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> employee;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> database dbtest1;</span><br></pre></td></tr></table></figure><ul><li>查看字符集以及字符比较规则</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;character_%&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;collation_%&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>修改字符编码和字符比较规则</li></ul><p>找到my.ini文件，使用notepad++打开并修改</p><p>[mysql] </p><p>default-character-set&#x3D;utf8</p><p>[mysqld]</p><p>character-set-server&#x3D;utf8</p><p>collation-server&#x3D;utf8_general-ci</p><ul><li>删除数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> dbtest2;</span><br></pre></td></tr></table></figure><h1 id="MySQL图形化管理工具"><a href="#MySQL图形化管理工具" class="headerlink" title="MySQL图形化管理工具"></a>MySQL图形化管理工具</h1><p>Workbench（官方）&#x2F;Navicat&#x2F;SQLyog&#x2F;dbeaver</p><p>SQLyog Ctrl+滚轮，可以修改文字大小</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL的卸载&quot;&gt;&lt;a href=&quot;#MySQL的卸载&quot; class=&quot;headerlink&quot; title=&quot;MySQL的卸载&quot;&gt;&lt;/a&gt;MySQL的卸载&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;停止MySQL服务 打开任务管理器，停止MySQL服务&lt;/li&gt;
&lt;li&gt;卸载软</summary>
      
    
    
    
    
  </entry>
  
</feed>
